{"kind":"project","sections":[{"title":"Navigating to a sync-up detail","chapter":"Navigating to sync-up detail","kind":"hero","estimatedTimeInMinutes":20,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}]}]},{"tasks":[{"stepsSection":[{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new file called App.swift and paste in the basic scaffolding of a new","type":"text"},{"text":" ","type":"text"},{"text":"Composable Architecture feature.","type":"text"}]}],"caption":[{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"You may already have an App.swift in your project that holds the entry point of","type":"text"},{"text":" ","type":"text"},{"text":"the application (i.e. ","type":"text"},{"code":"@main","type":"codeVoice"},{"text":"). If so, you can name this file AppFeature.swift, or you can","type":"text"},{"text":" ","type":"text"},{"text":"rename the entry point to Main.swift.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We often leave out suffixing reducers with names like “feature” or “reducer”, but in this"},{"type":"text","text":" "},{"type":"text","text":"case we must avoid conflicting with SwiftUI’s"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","isActive":true},{"type":"text","text":" protocol, so we’ll use"},{"type":"text","text":" "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":", instead."}]}]}],"media":null,"code":"SyncUpDetailNavigation-01-code-0001.swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This feature’s primary responsibility will be to integrate all the features that can be"},{"type":"text","text":" "},{"type":"text","text":"presented in the navigation stack. Currently that is only the "},{"code":"SyncUpsList","type":"codeVoice"},{"type":"text","text":" feature, which"},{"type":"text","text":" "},{"type":"text","text":"is always at the root of the stack, and the "},{"code":"SyncUpDetail","type":"codeVoice"},{"type":"text","text":" feature. Soon there will be more"},{"type":"text","text":" "},{"type":"text","text":"features that can be presented in the stack, such as the record meeting feature and the past"},{"type":"text","text":" "},{"type":"text","text":"meeting feature."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sync-ups list feature is a little different from all of those other features, though."},{"type":"text","text":" "},{"type":"text","text":"It is at the root of the stack, and it can not be dismissed. For that reason it is composed"},{"type":"text","text":" "},{"type":"text","text":"into the "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by simply holding onto its state and actions, and using the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" reducer to compose it into "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}]},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" reducer into the "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by holding onto its state and"},{"type":"text","text":" "},{"type":"text","text":"actions, and using the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" reducer to compose the two"},{"type":"text","text":" "},{"type":"text","text":"reducers together."}]}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-01-code-0002.swift"},{"type":"paragraph","inlineContent":[{"text":"Next we want to integrate the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" reducer into the ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"text":". The library comes","type":"text"},{"text":" ","type":"text"},{"text":"with specific tools to do this for navigation stacks. It starts by using","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference"},{"text":", which is a collection type provided by the library","type":"text"},{"text":" ","type":"text"},{"text":"specifically tuned for dealing with navigation stacks.","type":"text"}]},{"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"Integrate the state of ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"text":" by holding onto","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference"},{"text":". We like to call this variable ","type":"text"},{"code":"path","type":"codeVoice"},{"text":" since it mimics","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"NavigationStack(path:)","type":"codeVoice"},{"text":" API in SwiftUI.","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-01-code-0003.swift"},{"type":"paragraph","inlineContent":[{"text":"However, this is not quite right. We don’t want to ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"only"}]},{"text":" show the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"navigation stack. Soon we will have a ","type":"text"},{"code":"RecordMeeting","type":"codeVoice"},{"text":" feature, and a ","type":"text"},{"code":"Meeting","type":"codeVoice"},{"text":" feature,","type":"text"},{"text":" ","type":"text"},{"text":"and in the future there may be more.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this reason it is best to do some upfront work to model a feature that can handle any"},{"type":"text","text":" "},{"type":"text","text":"number of features on the stack. This works much like the "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" reducer we created"},{"type":"text","text":" "},{"type":"text","text":"in "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"reference"},{"type":"text","text":"."}]},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducer inside "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":". Like the "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" reducer we defined for the"},{"type":"text","text":" "},{"type":"text","text":"sync-up detail screen, "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" type will be an "},{"inlineContent":[{"text":"enum","type":"text"}],"type":"emphasis"},{"type":"text","text":" so that it can compose all of the"},{"type":"text","text":" "},{"type":"text","text":"screens you can navigate to into a single reducer."}]}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-01-code-0004.swift"},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a case to the path for the "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature. In the future more cases will be"},{"type":"text","text":" "},{"type":"text","text":"added to this enum for each kind of feature that can be pushed onto the stack."}]}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-01-code-0005.swift"},{"type":"paragraph","inlineContent":[{"text":"That’s all it takes to create a single reducer that encapsulates all of the logic and behavior","type":"text"},{"text":" ","type":"text"},{"text":"of each screen in the navigation stack. In the future as we add more screens to the stack","type":"text"},{"text":" ","type":"text"},{"text":"we will just add more cases to this reducer.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we will integrate the "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducer into the "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" reducer."}]},{"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Update the "},{"type":"codeVoice","code":"path"},{"type":"text","text":" variable to hold onto "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to maintain "},{"type":"codeVoice","code":"State"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", we must conform "},{"type":"codeVoice","code":"Path.State"},{"type":"text","text":" to be"},{"type":"text","text":" "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" as well."}]}]}],"media":null,"code":"SyncUpDetailNavigation-01-code-0006.swift"},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"type":"codeVoice","code":"Path"},{"type":"text","text":"’s actions into "},{"type":"codeVoice","code":"AppFeature"},{"type":"text","text":" by adding a case to its "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum, and using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"type":"text","text":". We can use the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"},{"type":"text","text":" type alias to specify a single generic of the path"},{"type":"text","text":" "},{"type":"text","text":"reducer."}]}],"caption":[{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"Right now we don’t need to perform any logic in the ","type":"text"},{"code":".path","type":"codeVoice"},{"text":" action so we can return","type":"text"},{"text":" ","type":"text"},{"code":".none","type":"codeVoice"},{"text":" in it.","type":"text"}],"type":"paragraph"}],"style":"note"}],"media":null,"code":"SyncUpDetailNavigation-01-code-0007.swift"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"type":"text","text":" is a type that represents the most"},{"type":"text","text":" "},{"type":"text","text":"fundamental things that can happen in a stack: an element in the stack can send an action"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)"},{"type":"text","text":"), or it can push an element"},{"type":"text","text":" "},{"type":"text","text":"onto the stack ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)"},{"type":"text","text":"), or it can"},{"type":"text","text":" "},{"type":"text","text":"pop an element from the stack ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)"},{"type":"text","text":")."}]},{"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrate the "},{"code":"Path","type":"codeVoice"},{"type":"text","text":" reducer into the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" of the "},{"code":"AppFeature","type":"codeVoice"},{"type":"text","text":" reducer by using the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true},{"type":"text","text":" operator."}]}],"caption":[],"media":null,"code":"SyncUpDetailNavigation-01-code-0008.swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)"},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"operator takes care of processing an incoming ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"text":", routing","type":"text"},{"text":" ","type":"text"},{"text":"it to the current reducer in the stack, and automatically cancelling effects when a feature","type":"text"},{"text":" ","type":"text"},{"text":"is popped from the stack.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"That is all it takes to create the ","type":"text"},{"code":"AppFeature","type":"codeVoice"},{"text":" reducer and integrate the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" into the","type":"text"},{"text":" ","type":"text"},{"text":"stack. Next We will create the view layer.","type":"text"}]}],"title":"Creating the app feature","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s create a new feature to hold the ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":".","type":"text"}]}],"mediaPosition":"trailing"}],"anchor":"Creating-the-app-feature"},{"stepsSection":[{"code":"SyncUpDetailNavigation-02-code-0001.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"AppView"},{"type":"text","text":" struct to conform to the "},{"type":"codeVoice","code":"View"},{"type":"text","text":" protocol in SwiftUI."}]}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0002.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"store"},{"type":"text","text":" property to the view. We are going to be proactive and make the property"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Bindable"},{"type":"text","text":" because we will need to derive a binding to it for the "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":"."}]}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0003.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Implement the ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" of the view by constructing a ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":", but we will be using","type":"text"},{"text":" ","type":"text"},{"text":"special initializer that comes with the library:","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)"},{"text":". This initializer takes","type":"text"},{"text":" ","type":"text"},{"text":"a binding to a store focused on the stack domain, as well as two trailing closures. The","type":"text"},{"text":" ","type":"text"},{"text":"first for the root view that is always present, and the second for the destinations that","type":"text"},{"text":" ","type":"text"},{"text":"can be  pushed onto the stack.","type":"text"}]}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0004.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"For the root view we can construct the "},{"type":"codeVoice","code":"SyncUpsListView"},{"type":"text","text":" by using"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"store"},{"type":"text","text":" to isolate"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" domain."}],"type":"paragraph"}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0005.swift","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","type":"reference"},{"text":" for more information on this tool.","type":"text"}]}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"destination"},{"type":"text","text":" trailing closure is handed a "},{"type":"codeVoice","code":"store"},{"type":"text","text":" focused on the path’s state, which"},{"type":"text","text":" "},{"type":"text","text":"is an enum. Because we are using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro on a "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" enum we get access"},{"type":"text","text":" "},{"type":"text","text":"to a special super power of enum reducers. We can switch on "},{"type":"codeVoice","code":"store.case"},{"type":"text","text":" to destructure"},{"type":"text","text":" "},{"type":"text","text":"a child store for each case of the enum."}]}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0006.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"text":"For each case in the enum we will destructure the store and construct the corresponding","type":"text"},{"text":" ","type":"text"},{"text":"destination view by handing the store to the view.","type":"text"}],"type":"paragraph"}],"media":null},{"code":"SyncUpDetailNavigation-02-code-0007.swift","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"text":"Add a preview to the bottom of the file.","type":"text"}],"type":"paragraph"}],"media":null},{"inlineContent":[{"text":"That’s all it takes to build the root ","type":"text"},{"code":"AppView","type":"codeVoice"},{"text":" that holds onto a ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"text":". But","type":"text"},{"text":" ","type":"text"},{"text":"currently we do not have any buttons to actually navigate to the detail screen from the list","type":"text"},{"text":" ","type":"text"},{"text":"screen.","type":"text"}],"type":"paragraph"}],"title":"Creating the app view","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s create the view that holds onto the ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"text":".","type":"text"}]}]}],"anchor":"Creating-the-app-view"},{"stepsSection":[{"media":null,"caption":[],"code":"SyncUpDetailNavigation-03-code-0001.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Go to the SyncUpsList.swift file where the ","type":"text"},{"code":"SyncUpListView","type":"codeVoice"},{"text":" is defined. In that view we","type":"text"},{"text":" ","type":"text"},{"text":"currently have a ","type":"text"},{"code":"Button","type":"codeVoice"},{"text":" in the list. Let’s now replace it with a ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"text":", but","type":"text"},{"text":" ","type":"text"},{"text":"using the special initializer that comes with this library:","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"runtimePreview":null,"type":"step"},{"inlineContent":[{"text":"This special initializer takes a piece of state that matches the type that is held in the","type":"text"},{"text":" ","type":"text"},{"text":"root feature’s ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"text":". In our case, that is ","type":"text"},{"code":"AppFeature.Path.State","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which is an enum of all the possible destinations that can be navigated to.","type":"text"}],"type":"paragraph"},{"media":null,"caption":[],"code":"SyncUpDetailNavigation-03-code-0002.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Provide ","type":"text"},{"code":"Path.State.detail","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"NavigationLink","type":"codeVoice"},{"text":" to indicate that we want to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the detail feature.","type":"text"}]}],"runtimePreview":null,"type":"step"},{"inlineContent":[{"type":"text","text":"However, to construct "},{"type":"codeVoice","code":"SyncUpDetail.State"},{"type":"text","text":" we need to provide a "},{"type":"codeVoice","code":"Shared<SyncUp>"},{"type":"text","text":" value."},{"type":"text","text":" "},{"type":"text","text":"This needs to be derived from the shared sync-ups held in "},{"type":"codeVoice","code":"SyncUpsList.State"},{"type":"text","text":" so that the"},{"type":"text","text":" "},{"type":"text","text":"detail feature can be allowed to make edits to the state have those edits be automatically"},{"type":"text","text":" "},{"type":"text","text":"made to "},{"type":"codeVoice","code":"SyncUpsList.State"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"One can use the projected value of "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" in order to derive a "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" value for each"},{"type":"text","text":" "},{"type":"text","text":"element in the collection."}],"type":"paragraph"},{"media":null,"caption":[{"name":"Tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While we use an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" initializer to do this conversion, it is possible to use any range"},{"type":"text","text":" "},{"type":"text","text":"replaceable collection."}]}],"style":"tip"}],"code":"SyncUpDetailNavigation-03-code-0003.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Convert the shared collection of sync-ups into a collection of shared sync-ups and pass it","type":"text"},{"text":" ","type":"text"},{"text":"along to ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"text":".","type":"text"}]}],"runtimePreview":null,"type":"step"},{"media":null,"caption":[],"code":"SyncUpDetailNavigation-03-code-0004.swift","content":[{"inlineContent":[{"text":"Pass the projected value ","type":"text"},{"code":"$syncUp","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"SyncUpDetail.State","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step"},{"inlineContent":[{"type":"text","text":"That is all it takes to perform a navigation from the list feature to the detail feature."},{"type":"text","text":" "},{"type":"text","text":"When the navigation link is tapped, SwiftUI will search up the view hierarchy to find the"},{"type":"text","text":" "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" powering the view, find its "},{"type":"codeVoice","code":"path"},{"type":"text","text":" binding, and append the new "},{"type":"codeVoice","code":".detail"},{"type":"text","text":" "},{"type":"text","text":"state to the path, thus triggering a drill-down animation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the easiest way to navigate to one screen to another, but it does have some drawbacks."},{"type":"text","text":" "},{"type":"text","text":"Because we need to reference all of "},{"type":"codeVoice","code":"AppFeature.State.Path"},{"type":"text","text":" to construct a navigation link, it can"},{"type":"text","text":" "},{"type":"text","text":"make modularization difficult. Every navigation link will need access to every feature’s"},{"type":"text","text":" "},{"type":"text","text":"state."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"An alternative is to use a plain "},{"code":"Button","type":"codeVoice"},{"type":"text","text":" instead of "},{"code":"NavigationLink","type":"codeVoice"},{"type":"text","text":", and send an action"},{"type":"text","text":" "},{"type":"text","text":"from that button. Then the parent "},{"code":"App","type":"codeVoice"},{"type":"text","text":" feature can intercept that action and manually append"},{"type":"text","text":" "},{"type":"text","text":"state to its "},{"code":"path","type":"codeVoice"},{"type":"text","text":". This fully decouples the features from one another, and only the "},{"code":"App","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"feature needs to have knowledge about all of the child features."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We will not do that refactor now, but it would be instructive for the reader to try it"},{"type":"text","text":" "},{"type":"text","text":"themselves."}],"type":"paragraph"},{"inlineContent":[{"text":"Before moving on let’s make sure that the deletion and editing logic that we implemented in","type":"text"},{"text":" ","type":"text"},{"text":"the detail screens properly works now that we can navigate to the detail screen from the","type":"text"},{"text":" ","type":"text"},{"text":"sync-ups list screen.","type":"text"}],"type":"paragraph"},{"media":"SyncUpDetailNavigation-03-video-0005.mov","caption":[],"code":null,"content":[{"inlineContent":[{"type":"text","text":"Navigate to the detail screen of a sync-up and delete it to confirm that it works as"},{"type":"text","text":" "},{"type":"text","text":"expected."}],"type":"paragraph"}],"runtimePreview":null,"type":"step"},{"media":"SyncUpDetailNavigation-03-video-0006.mov","caption":[],"code":null,"content":[{"inlineContent":[{"text":"Navigate to the detail screen of a sync-up, edit it, and then navigate back to the list","type":"text"},{"text":" ","type":"text"},{"text":"screen to verify that changes were made. Also relaunch the app to confirm that the data","type":"text"},{"text":" ","type":"text"},{"text":"was persisted to disk.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step"}],"title":"Navigating to the detail","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To navigate to the detail screen from the list screen we need to append some"},{"type":"text","text":" "},{"type":"codeVoice","code":"SyncUpDetail.State"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"path"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"App"},{"type":"text","text":" feature. The easiest way to do this is with"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":", which will automatically append some state to the path when tapped."}]}],"kind":"contentAndMedia"}],"anchor":"Navigating-to-the-detail"}],"kind":"tasks"},{"title":"Navigating to a meeting","action":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"type":"reference","overridingTitle":"Get started"},"kind":"callToAction","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"featuredEyebrow":"Tutorial"}],"variants":[{"paths":["\/tutorials\/composablearchitecture\/syncupdetailnavigation"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/$volume","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail"]],"modules":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","kind":"task"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence"}]}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation"},{"sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation"},{"sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","kind":"task"}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","projects":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","sections":[{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature"},{"kind":"task","reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","kind":"task"},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","kind":"task"}]},{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer","sections":[{"reference":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","kind":"task"}]}]}],"reference":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"metadata":{"title":"Navigating to a sync-up detail","category":"Building SyncUps","categoryPathComponent":"BuildingSyncUps","role":"project"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Non-exhaustive-testing":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Non-exhaustive-testing","title":"Non-exhaustive testing","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Non-exhaustive-testing"},"SyncUpDetailNavigation-02-code-0007.swift":{"fileType":"swift","type":"file","identifier":"SyncUpDetailNavigation-02-code-0007.swift","highlights":[{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}],"fileName":"App.swift","syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}","","#Preview {","  AppView(","    store: Store(","      initialState: AppFeature.State(","        syncUpsList: SyncUpsList.State()","      )","    ) {","      AppFeature()","    }","  )","}"]},"SyncUpDetailNavigation-02-code-0006.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        SyncUpDetailView(store: detailStore)","      }","    }","  }","}"],"syntax":"swift","fileName":"App.swift","identifier":"SyncUpDetailNavigation-02-code-0006.swift","highlights":[{"line":22}],"type":"file","fileType":"swift"},"SyncUpDetailNavigation-03-code-0004.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.$syncUps) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: $syncUp))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"identifier":"SyncUpDetailNavigation-03-code-0004.swift","highlights":[{"line":14},{"line":16}],"fileName":"SyncUpsList.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol for a type."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"navigatorTitle":[{"text":"StackState","kind":"identifier"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"title":"StackState","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"topic","url":"\/documentation\/composablearchitecture\/stackstate","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/element(id:action:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"element","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackaction\/element(id:action:)","abstract":[{"type":"text","text":"An action sent to the associated stack element at a given identifier."}],"title":"StackAction.element(id:action:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/element(id:action:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation#Deleting-a-sync-up":{"title":"Deleting a sync-up","type":"section","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation#Deleting-a-sync-up","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/testingnavigation#Deleting-a-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps#Writing-your-first-test":{"title":"Writing your first test","url":"\/tutorials\/composablearchitecture\/testinglistofsyncups#Writing-your-first-test","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps#Writing-your-first-test","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#A-handy-debugging-tool":{"role":"pseudoSymbol","title":"A handy debugging tool","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#A-handy-debugging-tool","type":"section","kind":"section","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#A-handy-debugging-tool"},"SyncUpDetailNavigation-01-code-0002.swift":{"highlights":[{"line":8},{"line":11},{"line":14},{"line":15},{"line":16},{"line":19},{"line":20}],"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"fileType":"swift","identifier":"SyncUpDetailNavigation-01-code-0002.swift","type":"file"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Destination-and-path-reducers":{"title":"Destination and path reducers","abstract":[],"url":"\/documentation\/composablearchitecture\/reducer#Destination-and-path-reducers","kind":"section","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Persisting-data-to-disk":{"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Persisting-data-to-disk","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Persisting-data-to-disk","title":"Persisting data to disk"},"SyncUpDetailNavigation-01-code-0008.swift":{"type":"file","highlights":[{"line":31}],"identifier":"SyncUpDetailNavigation-01-code-0008.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","    .forEach(\\.path, action: \\.path)","  }","}","extension AppFeature.Path.State: Equatable {}"],"syntax":"swift","fileType":"swift","fileName":"App.swift"},"SyncUpDetailNavigation-03-code-0002.swift":{"highlights":[{"line":16}],"fileName":"SyncUpsList.swift","syntax":"swift","fileType":"swift","identifier":"SyncUpDetailNavigation-03-code-0002.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail#Testing-the-edit-flow":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail#Testing-the-edit-flow","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail#Testing-the-edit-flow","role":"pseudoSymbol","title":"Testing the edit flow","abstract":[{"text":"The ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature has slowly become quite complex. It now handles two forms of","type":"text"},{"text":" ","type":"text"},{"text":"navigation (an alert and sheet), it models navigation state with a single enum, and it","type":"text"},{"text":" ","type":"text"},{"text":"updates the parent feature via a shared property. It’s about time we got some test","type":"text"},{"text":" ","type":"text"},{"text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future","type":"text"},{"text":" ","type":"text"},{"text":"changes with confidence.","type":"text"}],"kind":"section","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Sync-up-form-basics":{"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Sync-up-form-basics","title":"Sync-up form basics","url":"\/tutorials\/composablearchitecture\/syncupform#Sync-up-form-basics","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps":{"title":"What is SyncUps?","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"url":"\/tutorials\/composablearchitecture\/whatissyncups","estimatedTime":"5min","role":"project","kind":"project"},"SyncUpDetailNavigation-02-code-0005.swift":{"highlights":[{"line":20},{"line":21},{"line":22},{"line":23}],"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      switch store.case {","      case let .detail(detailStore):","        ","      }","    }","  }","}"],"fileType":"swift","identifier":"SyncUpDetailNavigation-02-code-0005.swift","type":"file"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingListOfSyncUps":{"url":"\/tutorials\/composablearchitecture\/testinglistofsyncups","role":"project","title":"Testing the list of sync-ups","type":"topic","estimatedTime":"5min","abstract":[{"type":"text","text":"The SyncUpsList feature we have built so far isn’t very complex. In fact, it only has one"},{"type":"text","text":" "},{"type":"text","text":"primary action, that of deleting sync-ups from its collection. However, it can be good practice"},{"type":"text","text":" "},{"type":"text","text":"to test new features as you add them, and in the future we will have much more complicated"},{"type":"text","text":" "},{"type":"text","text":"behavior to test."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingListOfSyncUps","kind":"project"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Presenting-the-sync-up-form":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Presenting-the-sync-up-form","role":"article","title":"Presenting the sync-up form","type":"topic","url":"\/tutorials\/buildingsyncups\/presenting-the-sync-up-form","kind":"article"},"SyncUpDetailNavigation-02-code-0004.swift":{"highlights":[{"line":16},{"line":17},{"line":18}],"syntax":"swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","      SyncUpsListView(","        store: store.scope(state: \\.syncUpsList, action: \\.syncUpsList)","      )","    } destination: { store in","      ","    }","  }","}"],"fileType":"swift","identifier":"SyncUpDetailNavigation-02-code-0004.swift","type":"file"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationLink/init(state:label:fileID:filePath:line:column:)":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationLink\/init(state:label:fileID:filePath:line:column:)","title":"init(state:label:fileID:filePath:line:column:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"L"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"label"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"L"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a navigation link that presents the view corresponding to an element of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":"."}],"url":"\/documentation\/composablearchitecture\/swiftui\/navigationlink\/init(state:label:fileid:filepath:line:column:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Label","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Destination","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]}},"SyncUpDetailNavigation-03-code-0001.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(store.syncUps) { syncUp in","        NavigationLink(","          state: ","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"],"identifier":"SyncUpDetailNavigation-03-code-0001.swift","highlights":[{"line":15},{"line":16},{"line":17}],"fileName":"SyncUpsList.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail":{"estimatedTime":"5min","abstract":[{"type":"text","text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that"},{"type":"text","text":" "},{"type":"text","text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync"},{"type":"text","text":" "},{"type":"text","text":"up, or drill-down to a past meeting, or even delete the meeting."}],"url":"\/tutorials\/composablearchitecture\/syncupdetail","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail","kind":"project","role":"project","title":"Sync-up detail"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Adding-a-new-sync-up-to-the-list","type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Adding-a-new-sync-up-to-the-list","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"title":"Adding a new sync-up to the list","kind":"section"},"https://developer.apple.com/documentation/swiftui/app":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","title":"App","titleInlineContent":[{"type":"text","text":"App"}]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Sync-up-detail":{"type":"topic","url":"\/tutorials\/buildingsyncups\/sync-up-detail","title":"Sync-up detail","role":"article","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Sync-up-detail","abstract":[],"kind":"article"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Lists-of-sync-ups":{"kind":"article","title":"Lists of sync-ups","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Lists-of-sync-ups","role":"article","type":"topic","url":"\/tutorials\/buildingsyncups\/lists-of-sync-ups"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#The-meeting-screen":{"kind":"section","url":"\/tutorials\/composablearchitecture\/meetingnavigation#The-meeting-screen","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#The-meeting-screen","title":"The meeting screen","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>>, ","kind":"text"},{"text":"root","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Drives a navigation stack with a store.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","type":"topic","title":"init(path:root:destination:fileID:filePath:line:column:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","abstract":[{"type":"text","text":"A special overload of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","isActive":true},{"type":"text","text":" for enum"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"type":"topic","title":"forEach(_:action:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":">\n"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation#Adding-a-sync-up":{"kind":"section","title":"Adding a sync-up","abstract":[{"text":"We have now integrated two moderately complex features, the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"SyncUpForm","type":"codeVoice"},{"text":", and","type":"text"},{"text":" ","type":"text"},{"text":"so its time to write some tests. This will give us the opportunity to prove that the features","type":"text"},{"text":" ","type":"text"},{"text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less","type":"text"},{"text":" ","type":"text"},{"text":"fragile.","type":"text"}],"role":"pseudoSymbol","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation#Adding-a-sync-up","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation#Adding-a-sync-up"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#Domain-models":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#Domain-models","title":"Domain models","url":"\/tutorials\/composablearchitecture\/listsofsyncups#Domain-models","kind":"section","abstract":[{"text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the","type":"text"},{"text":" ","type":"text"},{"text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as","type":"text"},{"text":" ","type":"text"},{"text":"the app evolves.","type":"text"}],"role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpDetail":{"kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupdetail","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyncUpDetail"},{"type":"text","text":" feature has slowly become quite complex. It now handles two forms of"},{"type":"text","text":" "},{"type":"text","text":"navigation (an alert and sheet), it models navigation state with a single enum, and it"},{"type":"text","text":" "},{"type":"text","text":"updates the parent feature via a shared property. It’s about time we got some test"},{"type":"text","text":" "},{"type":"text","text":"coverage on this feature so we can be sure it works as we expect, and so that we can make future"},{"type":"text","text":" "},{"type":"text","text":"changes with confidence."}],"estimatedTime":"10min","title":"Testing the sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpDetail","type":"topic","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer#Asking-for-speech-recognition-permission","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer#Asking-for-speech-recognition-permission","title":"Asking for speech recognition permission","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"role":"pseudoSymbol","type":"section","kind":"section"},"SyncUpDetailNavigation-03-video-0006.mov":{"identifier":"SyncUpDetailNavigation-03-video-0006.mov","alt":null,"poster":null,"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0006.mov"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-a-better-approach":{"title":"Form focus: a better approach","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-a-better-approach","type":"section","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-a-better-approach"},"SyncUpDetailNavigation-03-code-0003.swift":{"syntax":"swift","fileType":"swift","type":"file","highlights":[{"line":14}],"identifier":"SyncUpDetailNavigation-03-code-0003.swift","fileName":"SyncUpsList.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct SyncUpsList {","  \/\/ ...","}","","struct SyncUpsListView: View {","  @Bindable var store: StoreOf<SyncUpsList>","","  var body: some View {","    List {","      ForEach(Array(store.$syncUps)) { $syncUp in","        NavigationLink(","          state: AppFeature.Path.State.detail(SyncUpDetail.State(syncUp: <#Shared<SyncUp>#>))","        ) {","          CardView(syncUp: syncUp)","        }","        .listRowBackground(syncUp.theme.mainColor)","      }","    }","    .sheet(item: $store.scope(state: \\.addSyncUp, action: \\.addSyncUp)) { addSyncUpStore in","      NavigationStack {","        SyncUpFormView(store: addSyncUpStore)","          .navigationTitle(\"New sync-up\")","          .toolbar {","            ToolbarItem(placement: .cancellationAction) {","              Button(\"Discard\") {","                store.send(.discardButtonTapped)","              }","            }","            ToolbarItem(placement: .confirmationAction) {","              Button(\"Add\") {","                store.send(.confirmAddButtonTapped)","              }","            }","          }","      }","    }","    .toolbar {","      Button {","        store.send(.addSyncUpButtonTapped)","      } label: {","        Image(systemName: \"plus\")","      }","    }","    .navigationTitle(\"Daily Sync-ups\")","  }","}","","struct CardView: View {","  let syncUp: SyncUp","","  var body: some View {","    VStack(alignment: .leading) {","      Text(syncUp.title)","        .font(.headline)","      Spacer()","      HStack {","        Label(\"\\(syncUp.attendees.count)\", systemImage: \"person.3\")","        Spacer()","        Label(syncUp.duration.formatted(.units()), systemImage: \"clock\")","          .labelStyle(.trailingIcon)","      }","      .font(.caption)","    }","    .padding()","    .foregroundStyle(syncUp.theme.accentColor)","  }","}","","struct TrailingIconLabelStyle: LabelStyle {","  func makeBody(configuration: Configuration) -> some View {","    HStack {","      configuration.title","      configuration.icon","    }","  }","}","","extension LabelStyle where Self == TrailingIconLabelStyle {","  static var trailingIcon: Self { Self() }","}","","#Preview {","  NavigationStack {","    SyncUpsListView(","      store: Store(","        initialState: SyncUpsList.State(","          syncUps: [.mock]","        )","      ) {","        SyncUpsList()","      }","    )","  }","}"]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Navigating-to-sync-up-detail":{"url":"\/tutorials\/buildingsyncups\/navigating-to-sync-up-detail","title":"Navigating to sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Navigating-to-sync-up-detail","role":"article","type":"topic","kind":"article","abstract":[]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Adding-attendees":{"title":"Adding attendees","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Adding-attendees","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Adding-attendees","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps#Testing-persistence":{"kind":"section","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps#Testing-persistence","role":"pseudoSymbol","title":"Testing persistence","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"url":"\/tutorials\/composablearchitecture\/persistingsyncups#Testing-persistence"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Record-meeting":{"kind":"article","role":"article","title":"Record meeting","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Record-meeting","url":"\/tutorials\/buildingsyncups\/record-meeting","type":"topic","abstract":[]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer":{"title":"Adding a meeting timer","role":"project","kind":"project","url":"\/tutorials\/composablearchitecture\/implementingtimer","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"estimatedTime":"25min","type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-view":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-view","kind":"section","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-view","title":"Creating the app view","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-domains-together":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-domains-together","type":"section","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-domains-together","abstract":[{"text":"We now have two features built: the sync-ups list and the sync-up form. These features do not","type":"text"},{"text":" ","type":"text"},{"text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to","type":"text"},{"text":" ","type":"text"},{"text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then","type":"text"},{"text":" ","type":"text"},{"text":"add that sync-up to the root list.","type":"text"}],"role":"pseudoSymbol","kind":"section","title":"Integrating the feature domains together"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackAction"}],"kind":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented in a navigation stack.","type":"text"}],"title":"StackAction","role":"symbol","url":"\/documentation\/composablearchitecture\/stackaction","navigatorTitle":[{"kind":"identifier","text":"StackAction"}],"type":"topic"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Create-a-new-feature":{"type":"section","abstract":[{"text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will","type":"text"},{"text":" ","type":"text"},{"text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer.","type":"text"}],"kind":"section","title":"Create a new feature","role":"pseudoSymbol","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Create-a-new-feature","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Create-a-new-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpFormPresentation":{"estimatedTime":"10min","abstract":[{"type":"text","text":"We have now integrated two moderately complex features, the "},{"type":"codeVoice","code":"SyncUpsList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"so its time to write some tests. This will give us the opportunity to prove that the features"},{"type":"text","text":" "},{"type":"text","text":"work in tandem as we expect, and we will explore “non-exhaustive” testing to make our tests less"},{"type":"text","text":" "},{"type":"text","text":"fragile."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpFormPresentation","kind":"project","url":"\/tutorials\/composablearchitecture\/testingsyncupformpresentation","title":"Testing the add sync-up flow","role":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps":{"url":"\/tutorials\/composablearchitecture\/listsofsyncups","kind":"project","estimatedTime":"10min","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"title":"Lists of sync-ups","type":"topic","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#More-concise-domain-modeling":{"type":"section","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#More-concise-domain-modeling","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"More concise domain modeling","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#More-concise-domain-modeling","kind":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/push(id:state:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"text":"An action sent to present the given state at a given identifier in a navigation stack. This","type":"text"},{"text":" ","type":"text"},{"text":"action is typically sent from the view via the ","type":"text"},{"code":"NavigationLink(value:)","type":"codeVoice"},{"text":" initializer.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/push(id:state:)","url":"\/documentation\/composablearchitecture\/stackaction\/push(id:state:)","role":"symbol","title":"StackAction.push(id:state:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"title":"StackActionOf","url":"\/documentation\/composablearchitecture\/stackactionof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackActionOf"}],"abstract":[{"type":"text","text":"A convenience type alias for referring to a stack action of a given reducer’s domain."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StackActionOf"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Creating-the-app-feature":{"kind":"section","title":"Creating the app feature","type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Creating-the-app-feature","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Creating-the-app-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm#Form-focus-an-approach":{"abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm#Form-focus-an-approach","title":"Form focus: an approach","type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/syncupform#Form-focus-an-approach"},"SyncUpDetailNavigation-01-code-0001.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","  }","  enum Action {","  }","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      }","    }","  }","}"],"identifier":"SyncUpDetailNavigation-01-code-0001.swift","highlights":[],"fileName":"App.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Testing-the-timer":{"kind":"section","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Testing-the-timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#Testing-the-timer","title":"Testing the timer","role":"pseudoSymbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"url":"\/documentation\/composablearchitecture\/scope","title":"Scope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#Create-the-SyncUps-project":{"role":"pseudoSymbol","kind":"section","type":"section","url":"\/tutorials\/composablearchitecture\/whatissyncups#Create-the-SyncUps-project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#Create-the-SyncUps-project","title":"Create the SyncUps project","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature#Navigating-to-the-record-meeting-feature":{"role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature#Navigating-to-the-record-meeting-feature","title":"Navigating to the record meeting feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature#Navigating-to-the-record-meeting-feature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}]},"SyncUpDetailNavigation-01-code-0005.swift":{"syntax":"swift","fileType":"swift","type":"file","highlights":[{"line":8}],"identifier":"SyncUpDetailNavigation-01-code-0005.swift","fileName":"App.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"]},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/Persisting-sync-ups-to-disk":{"kind":"article","title":"Persisting sync-ups to disk","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/Persisting-sync-ups-to-disk","url":"\/tutorials\/buildingsyncups\/persisting-sync-ups-to-disk","abstract":[],"type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFrom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","text":"StackElementID","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","abstract":[{"text":"An action sent to dismiss the associated stack element at a given identifier.","type":"text"}],"title":"StackAction.popFrom(id:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"title":"forEach(_:action:destination:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":">\n"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in"},{"type":"text","text":" "},{"text":"parent state.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/New-sync-up-form":{"kind":"article","title":"New sync-up form","abstract":[],"url":"\/tutorials\/buildingsyncups\/new-sync-up-form","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/New-sync-up-form","role":"article"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp":{"kind":"project","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup","role":"project","estimatedTime":"30min","title":"Editing and deleting a sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp","type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps/What-is-SyncUps-":{"kind":"article","title":"What is SyncUps?","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps\/What-is-SyncUps-","url":"\/tutorials\/buildingsyncups\/what-is-syncups-","type":"topic","abstract":[],"role":"article"},"SyncUpDetailNavigation-01-code-0004.swift":{"type":"file","highlights":[{"line":6},{"line":7},{"line":8}],"identifier":"SyncUpDetailNavigation-01-code-0004.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"syntax":"swift","fileType":"swift","fileName":"App.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Controlling-dependencies-early":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Controlling-dependencies-early","title":"Controlling dependencies early","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Controlling-dependencies-early","type":"section","role":"pseudoSymbol","kind":"section"},"SyncUpDetailNavigation-01-code-0007.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case path(StackActionOf<Path>)","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .path:","        return .none","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"identifier":"SyncUpDetailNavigation-01-code-0007.swift","highlights":[{"line":16},{"line":25},{"line":26}],"fileName":"App.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#Ending-the-meeting-early":{"abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}],"url":"\/tutorials\/composablearchitecture\/implementingtimer#Ending-the-meeting-early","role":"pseudoSymbol","title":"Ending the meeting early","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#Ending-the-meeting-early","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation":{"estimatedTime":"20min","kind":"project","type":"topic","title":"Navigating to a sync-up detail","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation","abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation","role":"project"},"SyncUpDetailNavigation-02-code-0003.swift":{"identifier":"SyncUpDetailNavigation-02-code-0003.swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","","  var body: some View {","    NavigationStack(","      path: $store.scope(state: \\.path, action: \\.path)","    ) {","","    } destination: { store in","      ","    }","  }","}"],"type":"file","fileType":"swift","syntax":"swift","fileName":"App.swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/RecordMeetingFeature":{"kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/recordmeetingfeature","title":"The RecordMeeting feature","estimatedTime":"5min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/RecordMeetingFeature","abstract":[{"type":"text","text":"Let’s get the basics of a new feature into place that we can navigate to, and then we will"},{"type":"text","text":" "},{"type":"text","text":"slowly layer on its complex logic and behavior, such as the timer and speech recognizer."}],"role":"project"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","kind":"symbol","type":"topic","title":"scope(state:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ChildAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetail#Create-the-sync-up-detail":{"type":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetail#Create-the-sync-up-detail","url":"\/tutorials\/composablearchitecture\/syncupdetail#Create-the-sync-up-detail","kind":"section","title":"Create the sync-up detail","role":"pseudoSymbol","abstract":[{"text":"The “sync-up detail” screen shows all the information of a sync-up, and has many actions that","type":"text"},{"text":" ","type":"text"},{"text":"can take place in the screen. The user can edit the sync-up, or start a new meeting in the sync","type":"text"},{"text":" ","type":"text"},{"text":"up, or drill-down to a past meeting, or even delete the meeting.","type":"text"}]},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Deleting-the-sync-up":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Deleting-the-sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Deleting-the-sync-up","kind":"section","abstract":[{"type":"text","text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and"},{"type":"text","text":" "},{"type":"text","text":"deleting the sync-up. This will force us to face a number of common problems in app development"},{"type":"text","text":" "},{"type":"text","text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns."}],"title":"Deleting the sync-up","role":"pseudoSymbol","type":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm":{"estimatedTime":"10min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"role":"project","kind":"project","type":"topic","url":"\/tutorials\/composablearchitecture\/presentingsyncupform","title":"Presenting the sync-up form"},"SyncUpDetailNavigation-01-code-0006.swift":{"fileName":"App.swift","syntax":"swift","fileType":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @Reducer","  enum Path {","    case detail(SyncUpDetail)","  }","  @ObservableState","  struct State: Equatable {","    var path = StackState<Path.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}","extension AppFeature.Path.State: Equatable {}"],"highlights":[{"line":12},{"line":30}],"type":"file","identifier":"SyncUpDetailNavigation-01-code-0006.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation#Navigate-to-a-meeting":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation#Navigate-to-a-meeting","url":"\/tutorials\/composablearchitecture\/meetingnavigation#Navigate-to-a-meeting","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"kind":"section","title":"Navigate to a meeting"},"SyncUpDetailNavigation-01-code-0003.swift":{"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  @ObservableState","  struct State: Equatable {","    var path = StackState<SyncUpDetail.State>()","    var syncUpsList = SyncUpsList.State()","  }","  enum Action {","    case syncUpsList(SyncUpsList.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.syncUpsList, action: \\.syncUpsList) {","      SyncUpsList()","    }","    Reduce { state, action in","      switch action {","      case .syncUpsList:","        return .none","      }","    }","  }","}"],"highlights":[{"line":8}],"type":"file","identifier":"SyncUpDetailNavigation-01-code-0003.swift","fileType":"swift","fileName":"App.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ListsOfSyncUps#SyncUpsList-feature":{"type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"We will begin building the SyncUps app from scratch by implementing the feature that powers the"},{"type":"text","text":" "},{"type":"text","text":"list of sync-ups. It starts out as a simple feature, but it will become increasingly complex as"},{"type":"text","text":" "},{"type":"text","text":"the app evolves."}],"url":"\/tutorials\/composablearchitecture\/listsofsyncups#SyncUpsList-feature","title":"SyncUpsList feature","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ListsOfSyncUps#SyncUpsList-feature"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PresentingSyncUpForm#Integrating-the-feature-views-together":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PresentingSyncUpForm#Integrating-the-feature-views-together","url":"\/tutorials\/composablearchitecture\/presentingsyncupform#Integrating-the-feature-views-together","abstract":[{"type":"text","text":"We now have two features built: the sync-ups list and the sync-up form. These features do not"},{"type":"text","text":" "},{"type":"text","text":"exist in isolation, but rather are meant to be integrated in a deep way. One should be able to"},{"type":"text","text":" "},{"type":"text","text":"navigate to the sync-up form from the list view, enter the details of a new sync-up, and then"},{"type":"text","text":" "},{"type":"text","text":"add that sync-up to the root list."}],"title":"Integrating the feature views together","kind":"section","type":"section","role":"pseudoSymbol"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingSpeechRecognizer":{"role":"project","url":"\/tutorials\/composablearchitecture\/implementingspeechrecognizer","abstract":[{"type":"text","text":"We have just one feature left to implement, and it’s one of the most complicated ones. We need"},{"type":"text","text":" "},{"type":"text","text":"to use Apple’s "},{"type":"codeVoice","code":"SFSpeechRecognizer"},{"type":"text","text":" API to ask the user for permission to transcribe their"},{"type":"text","text":" "},{"type":"text","text":"audio, and then start a speech recognition task to live transcribe the meeting while it is"},{"type":"text","text":" "},{"type":"text","text":"in progress."}],"title":"Adding a speech recognizer","type":"topic","estimatedTime":"10min","kind":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingSpeechRecognizer"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm":{"url":"\/tutorials\/composablearchitecture\/testingsyncupform","title":"Testing the sync-up form","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm","kind":"project","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"type":"topic","role":"project","estimatedTime":"10min"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpDetailNavigation#Navigating-to-the-detail":{"abstract":[{"type":"text","text":"We will wrap the application built so far in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" so that we can navigate to"},{"type":"text","text":" "},{"type":"text","text":"the detail screen. To do this we will create a new root-level feature that will be responsible"},{"type":"text","text":" "},{"type":"text","text":"for implementing the logic of the stack and integrating all of the features together."}],"type":"section","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpDetailNavigation#Navigating-to-the-detail","role":"pseudoSymbol","title":"Navigating to the detail","url":"\/tutorials\/composablearchitecture\/syncupdetailnavigation#Navigating-to-the-detail"},"SyncUpDetailNavigation-03-video-0005.mov":{"type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/ComposableArchitecture\/SyncUpDetailNavigation-03-video-0005.mov"}],"identifier":"SyncUpDetailNavigation-03-video-0005.mov","alt":null,"poster":null},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingSyncUpForm#Removing-attendees":{"type":"section","url":"\/tutorials\/composablearchitecture\/testingsyncupform#Removing-attendees","role":"pseudoSymbol","abstract":[{"type":"text","text":"We now have a moderately complex feature for editing the details of a sync-up, the "},{"type":"codeVoice","code":"SyncUpForm"},{"type":"text","text":" "},{"type":"text","text":"reducer. Let’s get some test coverage on the feature, and doing so will force us to come"},{"type":"text","text":" "},{"type":"text","text":"face-to-face with dependencies for the first time in this tutorial."}],"title":"Removing attendees","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingSyncUpForm#Removing-attendees"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"kind":"overview","abstract":[{"text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,","type":"text"},{"text":" ","type":"text"},{"text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on","type":"text"},{"text":" ","type":"text"},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}],"url":"\/tutorials\/buildingsyncups","role":"overview","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","type":"topic","title":"Building SyncUps"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/SyncUpForm":{"type":"topic","abstract":[{"type":"text","text":"We will create a new feature with the Composable Architecture that is capable of editing the"},{"type":"text","text":" "},{"type":"text","text":"details of a new sync-up. We will also add some nuanced logic around how focus moves through the"},{"type":"text","text":" "},{"type":"text","text":"feature to make things a little more interesting."}],"url":"\/tutorials\/composablearchitecture\/syncupform","estimatedTime":"15min","title":"Sync-up form","role":"project","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/SyncUpForm","kind":"project"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/WhatIsSyncUps#A-tour-of-SyncUps":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/composablearchitecture\/whatissyncups#A-tour-of-SyncUps","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/WhatIsSyncUps#A-tour-of-SyncUps","abstract":[{"type":"text","text":"Let’s start with a tour of the application we will be building. It’s called SyncUps, and it’s a"},{"type":"text","text":" "},{"type":"text","text":"recreation of Apple’s Scrumdinger demo application."}],"title":"A tour of SyncUps","kind":"section"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/MeetingNavigation":{"type":"topic","title":"Navigating to a meeting","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/MeetingNavigation","role":"project","kind":"project","abstract":[{"type":"text","text":"Now that we have a navigation stack in place we can start navigating to other features in the"},{"type":"text","text":" "},{"type":"text","text":"application. The simplest is the meeting screen, which allows you to see the details of a"},{"type":"text","text":" "},{"type":"text","text":"previous recorded meeting."}],"estimatedTime":"5min","url":"\/tutorials\/composablearchitecture\/meetingnavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/TestingNavigation":{"title":"Testing navigation","url":"\/tutorials\/composablearchitecture\/testingnavigation","role":"project","abstract":[{"text":"We have now implemented a navigation stack at the root of our application, and integrated","type":"text"},{"text":" ","type":"text"},{"text":"3 features into the stack: the ","type":"text"},{"code":"SyncUpsList","type":"codeVoice"},{"text":" feature, the ","type":"text"},{"code":"SyncUpDetail","type":"codeVoice"},{"text":" feature, and the","type":"text"},{"text":" ","type":"text"},{"code":"MeetingView","type":"codeVoice"},{"text":". Some of these features have quite complex logic binding them together, such as","type":"text"},{"text":" ","type":"text"},{"text":"when one deletes a sync-up from the detail screen it should pop the screen off the stack.","type":"text"}],"kind":"project","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/TestingNavigation"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/PersistingSyncUps":{"role":"project","estimatedTime":"5min","title":"Persisting sync-ups","url":"\/tutorials\/composablearchitecture\/persistingsyncups","kind":"project","abstract":[{"type":"text","text":"Now that we have the ability to add and remove sync-ups from the application, let’s add some"},{"type":"text","text":" "},{"type":"text","text":"persistence. This will involve using the “shared state” tools from the library, such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/PersistingSyncUps"},"SyncUpDetailNavigation-02-code-0002.swift":{"syntax":"swift","content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","  @Bindable var store: StoreOf<AppFeature>","}"],"highlights":[{"line":10}],"type":"file","identifier":"SyncUpDetailNavigation-02-code-0002.swift","fileType":"swift","fileName":"App.swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/EditingAndDeletingSyncUp#Editing-the-sync-up":{"title":"Editing the sync-up","url":"\/tutorials\/composablearchitecture\/editinganddeletingsyncup#Editing-the-sync-up","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/EditingAndDeletingSyncUp#Editing-the-sync-up","abstract":[{"text":"Let’s implement two major pieces of functionality in the detail screen: editing the sync-up and","type":"text"},{"text":" ","type":"text"},{"text":"deleting the sync-up. This will force us to face a number of common problems in app development","type":"text"},{"text":" ","type":"text"},{"text":"all at once, including view reuse, navigation, alerts, and parent-child communication patterns.","type":"text"}],"type":"section","kind":"section","role":"pseudoSymbol"},"SyncUpDetailNavigation-02-code-0001.swift":{"content":["import ComposableArchitecture","import SwiftUI","","@Reducer","struct AppFeature {","  \/\/ ...","}","","struct AppView: View {","}"],"identifier":"SyncUpDetailNavigation-02-code-0001.swift","highlights":[{"line":8},{"line":9},{"line":10}],"fileName":"App.swift","type":"file","syntax":"swift","fileType":"swift"},"doc://ComposableArchitecture/tutorials/ComposableArchitecture/ImplementingTimer#A-basic-timer":{"title":"A basic timer","url":"\/tutorials\/composablearchitecture\/implementingtimer#A-basic-timer","kind":"section","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/ComposableArchitecture\/ImplementingTimer#A-basic-timer","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"The first major piece of logic and behavior we will introduce to the record meeting feature is"},{"type":"text","text":" "},{"type":"text","text":"the timer. This is a long-living effect that runs in parallel with the rest of the feature, and"},{"type":"text","text":" "},{"type":"text","text":"we need to implement nuanced logic to figure out when to proceed to the next speaker."}]}}}