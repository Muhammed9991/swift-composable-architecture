{"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onKeyPress(phases:action:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onKeyPress(phases:action:)"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"kind":"symbol","metadata":{"extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"onKeyPress(phases:action:)","platforms":[{"beta":false,"name":"iOS","introducedAt":"17.0","deprecated":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"14.0","deprecated":false,"unavailable":false},{"beta":false,"name":"tvOS","introducedAt":"17.0","deprecated":false,"unavailable":false}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE10onKeyPress6phases6actionQrAA0eF0V6PhasesV_AH6ResultOAHctF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onKeyPress"},{"kind":"text","text":"("},{"kind":"externalParam","text":"phases"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier","text":"KeyPress"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV","kind":"typeIdentifier","text":"Phases"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier","text":"KeyPress"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7SwiftUI8KeyPressV","kind":"typeIdentifier","text":"KeyPress"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onKeyPress","kind":"identifier"},{"text":"(","kind":"text"},{"text":"phases","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"text":" = [.down, .repeat], ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":") -> ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/onkeypress(phases:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"title":"SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference"},{"text":" views.","type":"text"}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","role":"collectionGroup","kind":"article","title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/onKeyPress(phases:action:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onKeyPress","kind":"identifier"},{"text":"(","kind":"text"},{"text":"phases","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"text":"Phases","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6PhasesV"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":") -> ","kind":"text"},{"text":"KeyPress","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV"},{"text":".","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI8KeyPressV6ResultO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"title":"onKeyPress(phases:action:)","type":"topic","url":"\/documentation\/composablearchitecture\/switchstore\/onkeypress(phases:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/onKeyPress(phases:action:)","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}]}}}