{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"symbolKind":"protocol","title":"Reducer","roleHeading":"Protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"externalID":"s:22ComposableArchitecture7ReducerP"},"variants":[{"paths":["\/documentation\/composablearchitecture\/reducer"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Implementing a reducer","anchor":"Implementing-a-reducer","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]},{"title":"Composing reducers","anchor":"Composing-reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"]},{"title":"Embedding child features","anchor":"Embedding-child-features","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]},{"title":"Supporting reducers","anchor":"Supporting-reducers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"]},{"title":"Reducer modifiers","anchor":"Reducer-modifiers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/transformDependency(_:transform:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/onChange(of:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/signpost(_:log:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/_printChanges(_:)"]},{"title":"Supporting types","anchor":"Supporting-types","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerOf"]},{"title":"Deprecations","anchor":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:fileID:filePath:line:column:)-9blhe"]}],"relationshipsSections":[{"kind":"relationships","title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer"]},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope"]}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference"},{"type":"text","text":"s should be executed later by the store, if any."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},"seeAlsoSections":[{"generated":true,"title":"State management","anchor":"State-management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","text":"State"},{"kind":"text","text":", "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","text":"Action"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol describes how to evolve the current state of an application to the next"},{"type":"text","text":" "},{"type":"text","text":"state, given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if"},{"type":"text","text":" "},{"type":"text","text":"any. Types that conform to this protocol represent the domain, logic and behavior for a feature."},{"type":"text","text":" "},{"type":"text","text":"Conformances to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" can be written by hand, but the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" can make your reducers"},{"type":"text","text":" "},{"type":"text","text":"more concise and more powerful."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"#Conforming-to-the-Reducer-protocol","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Using-the-Reducer-macro","type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#CasePathable-and-dynamicMemberLookup-enums","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"#Automatic-fulfillment-of-reducer-requirements","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"#Destination-and-path-reducers","type":"reference","isActive":true}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"#Navigating-to-non-reducer-features"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"#Synthesizing-protocol-conformances-on-State-and-Action"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#Nested-enum-reducers","type":"reference"}]}]}]}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"#Gotchas","type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"#Autocomplete","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"#Preview-and-enum-reducers","type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"#CI-build-failures","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"Conforming to the Reducer protocol","anchor":"Conforming-to-the-Reducer-protocol","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The bare minimum of conforming to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol is to provide a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true},{"type":"text","text":" type"},{"type":"text","text":" "},{"type":"text","text":"that represents the state your feature needs to do its job, a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true},{"type":"text","text":" type that"},{"type":"text","text":" "},{"type":"text","text":"represents the actions users can perform in your feature (as well as actions that effects can"},{"type":"text","text":" "},{"type":"text","text":"feed back into the system), and a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true},{"type":"text","text":" property that compose your feature"},{"type":"text","text":" "},{"type":"text","text":"together with any other features that are needed (such as for navigation)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As a very simple example, a “counter” feature could model its state as a struct holding an integer:"}],"type":"paragraph"},{"code":["struct CounterFeature: Reducer {","  @ObservableState","  struct State {","    var count = 0","  }","}"],"syntax":"swift","type":"codeListing"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We have added the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","isActive":true},{"type":"text","text":" to "},{"type":"codeVoice","code":"State"},{"type":"text","text":" here so that the view can automatically"},{"type":"text","text":" "},{"type":"text","text":"observe state changes. In future versions of the library this macro will be automatically applied"},{"type":"text","text":" "},{"type":"text","text":"by the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro."}]}],"type":"aside"},{"inlineContent":[{"type":"text","text":"The actions would be just two cases for tapping an increment or decrement button:"}],"type":"paragraph"},{"code":["struct CounterFeature: Reducer {","  \/\/ ...","  enum Action {","    case decrementButtonTapped","    case incrementButtonTapped","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The logic of your feature is implemented by mutating the feature’s current state when an action","type":"text"},{"text":" ","type":"text"},{"text":"comes into the system. This is most easily done by constructing a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","isActive":true,"type":"reference"},{"text":" inside the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true,"type":"reference"},{"text":" of your reducer:","type":"text"}],"type":"paragraph"},{"code":["struct CounterFeature: Reducer {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .decrementButtonTapped:","        state.count -= 1","        return .none","      case .incrementButtonTapped:","        state.count += 1  ","        return .none","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce"},{"type":"text","text":" reducer’s first responsibility is to mutate the feature’s current state given an"},{"type":"text","text":" "},{"type":"text","text":"action. Its second responsibility is to return effects that will be executed asynchronously and feed"},{"type":"text","text":" "},{"type":"text","text":"their data back into the system. Currently "},{"code":"Feature","type":"codeVoice"},{"type":"text","text":" does not need to run any effects, and so"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none"},{"type":"text","text":" is returned."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the feature does need to do effectful work, then more would need to be done. For example, suppose"},{"type":"text","text":" "},{"type":"text","text":"the feature has the ability to start and stop a timer, and with each tick of the timer the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" "},{"type":"text","text":"will be incremented. That could be done like so:"}],"type":"paragraph"},{"code":["struct CounterFeature: Reducer {","  @ObservableState","  struct State {","    var count = 0","  }","  enum Action {","    case decrementButtonTapped","    case incrementButtonTapped","    case startTimerButtonTapped","    case stopTimerButtonTapped","    case timerTick","  }","  enum CancelID { case timer }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .decrementButtonTapped:","        state.count -= 1","        return .none","","      case .incrementButtonTapped:","        state.count += 1","        return .none","","      case .startTimerButtonTapped:","        return .run { send in","          while true {","            try await Task.sleep(for: .seconds(1))","            await send(.timerTick)","          }","        }","        .cancellable(CancelID.timer)","","      case .stopTimerButtonTapped:","        return .cancel(CancelID.timer)","","      case .timerTick:","        state.count += 1","        return .none","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This sample emulates a timer by performing an infinite loop with a "},{"type":"codeVoice","code":"Task.sleep"},{"type":"text","text":" inside. This"},{"type":"text","text":" "},{"type":"text","text":"is simple to do, but is also inaccurate since small imprecisions can accumulate. It would be"},{"type":"text","text":" "},{"type":"text","text":"better to inject a clock into the feature so that you could use its "},{"type":"codeVoice","code":"timer"},{"type":"text","text":" method. Read the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA"},{"type":"text","text":" articles for more information."}]}],"type":"aside"},{"inlineContent":[{"type":"text","text":"That is the basics of implementing a feature as a conformance to "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Using the @Reducer macro","anchor":"Using-the-Reducer-macro","level":2,"type":"heading"},{"inlineContent":[{"text":"While you technically can conform to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"reference"},{"text":" protocol directly, as we did above, the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro can automate many aspects of implementing features for you. At a bare minimum,","type":"text"},{"text":" ","type":"text"},{"text":"all you have to do is annotate your reducer with ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" and you can even drop the ","type":"text"},{"code":"Reducer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"conformance:","type":"text"}],"type":"paragraph"},{"code":["+@Reducer","-struct CounterFeature: Reducer {","+struct CounterFeature {","   @ObservableState","   struct State {","     var count = 0","   }","   enum Action {","     case decrementButtonTapped","     case incrementButtonTapped","   }","   var body: some ReducerOf<Self> {","     Reduce { state, action in","       switch action {","       case .decrementButtonTapped:","         state.count -= 1","         return .none","       case .incrementButtonTapped:","         state.count += 1  ","         return .none","       }","     }","   }"," }"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"type":"text","text":"There are a number of things the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference","isActive":true},{"type":"text","text":" macro does for you:"}],"type":"paragraph"},{"text":"@CasePathable and @dynamicMemberLookup enums","anchor":"CasePathable-and-dynamicMemberLookup-enums","level":3,"type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" macro automatically applies the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()"},{"text":" macro to your","type":"text"},{"text":" ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" enum:","type":"text"}],"type":"paragraph"},{"code":["+@CasePathable"," enum Action {","   \/\/ ..."," }"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths"},{"type":"text","text":" are a tool that bring the power and ergonomics of key paths to enum"},{"type":"text","text":" "},{"type":"text","text":"cases, and they are a vital tool for composing reducers together."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In particular, having this macro applied to your "},{"code":"Action","type":"codeVoice"},{"type":"text","text":" enum will allow you to use key path"},{"type":"text","text":" "},{"type":"text","text":"syntax for specifying enum cases in various APIs in the library, such as"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":", and more."}],"type":"paragraph"},{"inlineContent":[{"text":"Further, if the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","type":"reference"},{"text":" of your feature is an enum, which is useful for modeling a feature","type":"text"},{"text":" ","type":"text"},{"text":"that can be one of multiple mutually exclusive values, the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" will apply the","type":"text"},{"text":" ","type":"text"},{"code":"@CasePathable","type":"codeVoice"},{"text":" macro, as well as ","type":"text"},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["+@CasePathable","+@dynamicMemberLookup"," enum State {","   \/\/ ..."," }"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"text":"This will allow you to use key path syntax for specifying case paths to the ","type":"text"},{"code":"State","type":"codeVoice"},{"text":"’s cases, as well","type":"text"},{"text":" ","type":"text"},{"text":"as allow you to use dot-chaining syntax for optionally extracting a case from the state. This can be","type":"text"},{"text":" ","type":"text"},{"text":"useful when using the operators that come with the library that allow for driving navigation from an","type":"text"},{"text":" ","type":"text"},{"text":"enum of options:","type":"text"}],"type":"paragraph"},{"code":[".sheet(","  item: $store.scope(state: \\.destination?.editForm, action: \\.destination.editForm)",") { store in","  FormView(store: store)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The syntax "},{"code":"state: \\.destination?.editForm","type":"codeVoice"},{"type":"text","text":" is only possible due to both "},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"code":"@CasePathable","type":"codeVoice"},{"type":"text","text":" being applied to the "},{"code":"State","type":"codeVoice"},{"type":"text","text":" enum."}],"type":"paragraph"},{"text":"Automatic fulfillment of reducer requirements","anchor":"Automatic-fulfillment-of-reducer-requirements","level":3,"type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro will automatically fill in any ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"text":" protocol requirements that you","type":"text"},{"text":" ","type":"text"},{"text":"leave off. For example, something as simple as this compiles:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct Feature {}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" macro will automatically insert an empty ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"text":" struct, an empty","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true,"type":"reference"},{"text":" enum, and an empty ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true,"type":"reference"},{"text":". This effectively means that","type":"text"},{"text":" ","type":"text"},{"code":"Feature","type":"codeVoice"},{"text":" is a logicless, behaviorless, inert reducer.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Having these requirements automatically fulfilled for you can be handy for slowly filling them in","type":"text"},{"text":" ","type":"text"},{"text":"with their real implementations. For example, this ","type":"text"},{"type":"codeVoice","code":"Feature"},{"text":" reducer could be integrated in a parent","type":"text"},{"text":" ","type":"text"},{"text":"domain using the library’s navigation tools, all without having implemented any of the domain yet.","type":"text"},{"text":" ","type":"text"},{"text":"Then, once we are ready we can start implementing the real logic and behavior of the feature.","type":"text"}],"type":"paragraph"},{"text":"Destination and path reducers","anchor":"Destination-and-path-reducers","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"There is a common pattern in the Composable Architecture of representing destinations a feature can"},{"type":"text","text":" "},{"type":"text","text":"navigate to as a reducer that operates on enum state, with a case for each feature that can be"},{"type":"text","text":" "},{"type":"text","text":"navigated to. This is explained in great detail in the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":" articles."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This form of domain modeling can be very powerful, but also incur a bit of boilerplate. For example,"},{"type":"text","text":" "},{"type":"text","text":"if a feature can navigate to 3 other features, then one might have a "},{"type":"codeVoice","code":"Destination"},{"type":"text","text":" reducer like the"},{"type":"text","text":" "},{"type":"text","text":"following:"}],"type":"paragraph"},{"code":["@Reducer","struct Destination {","  @ObservableState","  enum State {","    case add(FormFeature.State)","    case detail(DetailFeature.State)","    case edit(EditFeature.State)","  }","  enum Action {","    case add(FormFeature.Action)","    case detail(DetailFeature.Action)","    case edit(EditFeature.Action)","  }","  var body: some ReducerOf<Self> {","    Scope(state: \\.add, action: \\.add) {","      FormFeature()","    }","    Scope(state: \\.detail, action: \\.detail) {","      DetailFeature()","    }","    Scope(state: \\.edit, action: \\.edit) {","      EditFeature()","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"It’s not the worst code in the world, but it is 24 lines with a lot of repetition, and if we need to"},{"type":"text","text":" "},{"type":"text","text":"add a new destination we must add a case to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true},{"type":"text","text":" enum, a case to the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","isActive":true},{"type":"text","text":" enum, and a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","isActive":true},{"type":"text","text":" to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" macro is now capable of generating all of this code for you from the following"},{"type":"text","text":" "},{"type":"text","text":"simple declaration"}],"type":"paragraph"},{"code":["@Reducer","enum Destination {","  case add(FormFeature)","  case detail(DetailFeature)","  case edit(EditFeature)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"24 lines of code has become 6. The ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" macro can now be applied to an ","type":"text"},{"inlineContent":[{"type":"text","text":"enum"}],"type":"emphasis"},{"text":" where each case","type":"text"},{"text":" ","type":"text"},{"text":"holds onto the reducer that governs the logic and behavior for that case. Further, when using the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)"},{"text":" operator with this style of ","type":"text"},{"code":"Destination","type":"codeVoice"},{"text":" enum reducer you can","type":"text"},{"text":" ","type":"text"},{"text":"completely leave off the trailing closure as it can be automatically inferred:","type":"text"}],"type":"paragraph"},{"code":[" Reduce { state, action in","   \/\/ Core feature logic"," }"," .ifLet(\\.$destination, action: \\.destination)","-{","-  Destination()","-}"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This pattern also works for "},{"type":"codeVoice","code":"Path"},{"type":"text","text":" reducers, which is common when dealing with"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","isActive":true},{"type":"text","text":", and in that case you can leave off the trailing closure of the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)","isActive":true},{"type":"text","text":" operator:"}],"type":"paragraph"},{"code":["Reduce { state, action in","  \/\/ Core feature logic","}",".forEach(\\.path, action: \\.path)","-{","-  Path()","-}"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"text":"Further, for ","type":"text"},{"type":"codeVoice","code":"Path"},{"text":" reducers in particular, the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"text":" macro also helps you reduce","type":"text"},{"text":" ","type":"text"},{"text":"boilerplate when using the initializer","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","isActive":true},{"text":" that comes with the library.","type":"text"},{"text":" ","type":"text"},{"text":"In the last trailing closure you can use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","isActive":true},{"text":" computed property to switch on the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Path.State"},{"text":" enum and extract out a store for each case:","type":"text"}],"type":"paragraph"},{"code":["NavigationStack(path: $store.scope(state: \\.path, action: \\.path)) {","  \/\/ Root view","} destination: { store in","  switch store.case {","  case let .add(store):","    AddView(store: store)","  case let .detail(store):","    DetailView(store: store)","  case let .edit(store):","    EditView(store: store)","  }","}"],"syntax":"swift","type":"codeListing"},{"text":"Navigating to non-reducer features","anchor":"Navigating-to-non-reducer-features","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"There are many times that you want to present or navigate to a feature that is not modeled with a"},{"type":"text","text":" "},{"type":"text","text":"Composable Architecture reducer. This can happen with legacy features that are not built with the"},{"type":"text","text":" "},{"type":"text","text":"Composable Architecture, or with features that are very simple and do not need a fully built"},{"type":"text","text":" "},{"type":"text","text":"reducer."}],"type":"paragraph"},{"inlineContent":[{"text":"In those cases you can use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","type":"reference"},{"text":" macros to","type":"text"},{"text":" ","type":"text"},{"text":"annotate cases that are not powered by reducers. See the documentation for those macros for more","type":"text"},{"text":" ","type":"text"},{"text":"details.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"As an example, suppose that you have a feature that can navigate to multiple features, all of","type":"text"},{"text":" ","type":"text"},{"text":"which are Composable Architecture features except for one:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","enum Destination {","  case add(AddItemFeature)","  case edit(EditItemFeature)","  @ReducerCaseIgnored","  case item(Item)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"In this situation the ","type":"text"},{"code":".item","type":"codeVoice"},{"text":" case holds onto a plain item and not a full reducer, and for that","type":"text"},{"text":" ","type":"text"},{"text":"reason we have to ignore it from some of ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":"’s macro expansion.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Then, to present a view from this case one can do:","type":"text"}],"type":"paragraph"},{"code":[".sheet(item: $store.scope(state: \\.destination?.item, action: \\.destination.item)) { store in","  ItemView(item: store.withState { $0 })","}"],"syntax":"swift","type":"codeListing"},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","isActive":true,"type":"reference"},{"type":"text","text":" is necessary because the value held inside the "},{"type":"codeVoice","code":".item"},{"type":"text","text":" case"},{"type":"text","text":" "},{"type":"text","text":"does not have the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","isActive":true,"type":"reference"},{"type":"text","text":" macro applied, nor should it. And so using "},{"type":"codeVoice","code":"withState"},{"type":"text","text":" "},{"type":"text","text":"is a way to get access to the state in the store without any observation taking place."}],"type":"paragraph"}],"type":"aside"},{"text":"Synthesizing protocol conformances on State and Action","anchor":"Synthesizing-protocol-conformances-on-State-and-Action","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"Since the "},{"type":"codeVoice","code":"State"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" types are generated automatically for you when using "},{"type":"codeVoice","code":"@Reducer"},{"type":"text","text":" on an"},{"type":"text","text":" "},{"type":"text","text":"enum, you must extend these types yourself to synthesize conformances of "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"etc."}]},{"type":"text","text":":"}],"type":"paragraph"},{"code":["@Reducer","enum Destination {","  \/\/ ...","}","extension Destination.State: Equatable {}"],"syntax":"swift","type":"codeListing"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"In Swift <6 the above extension causes a compiler error due to a bug in Swift.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To work around this compiler bug, the library provides a version of the ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" macro that","type":"text"},{"text":" ","type":"text"},{"text":"takes two ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_SynthesizedConformance","type":"reference"},{"text":" arguments, which allow you to","type":"text"},{"text":" ","type":"text"},{"text":"describe the protocols you want to attach to the ","type":"text"},{"code":"State","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Action","type":"codeVoice"},{"text":" types:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer(state: .equatable, .sendable, action: .sendable)","enum Destination {","  \/\/ ...","}"]}],"type":"aside"},{"text":"Nested enum reducers","anchor":"Nested-enum-reducers","level":4,"type":"heading"},{"inlineContent":[{"text":"There may be times when an enum reducer may want to nest another enum reducer. To do so, the parent","type":"text"},{"text":" ","type":"text"},{"text":"enum reducer must specify the child’s ","type":"text"},{"code":"Body","type":"codeVoice"},{"text":" associated value and ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" static property explicitly:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","enum Modal { \/* ... *\/ }","","@Reducer","enum Destination {","  case modal(Modal.Body = Modal.body)","}"],"syntax":"swift","type":"codeListing"},{"text":"Gotchas","anchor":"Gotchas","level":3,"type":"heading"},{"text":"Autocomplete","anchor":"Autocomplete","level":4,"type":"heading"},{"inlineContent":[{"text":"Applying ","type":"text"},{"code":"@Reducer","type":"codeVoice"},{"text":" can break autocompletion in the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" of the reducer. This is a known","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/swift\/issues\/69477"},{"text":", and it can generally be worked around by","type":"text"},{"text":" ","type":"text"},{"text":"providing additional type hints to the compiler:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Adding an explicit "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" conformance in addition to the macro application can restore"},{"type":"text","text":" "},{"type":"text","text":"autocomplete throughout the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" of the reducer:"}],"type":"paragraph"},{"syntax":"diff","code":[" @Reducer","-struct Feature {","+struct Feature: Reducer {"],"type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adding explicit generics to instances of ","type":"text"},{"code":"Reduce","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" can restore autocomplete","type":"text"},{"text":" ","type":"text"},{"text":"inside the ","type":"text"},{"code":"Reduce","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"diff","code":[" var body: some Reducer<State, Action> {","-  Reduce { state, action in","+  Reduce<State, Action> { state, action in"]}]}],"type":"orderedList"},{"text":"#Preview and enum reducers","anchor":"Preview-and-enum-reducers","level":4,"type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"#Preview","type":"codeVoice"},{"text":" macro is not capable of seeing the expansion of any macros since it is a macro","type":"text"},{"text":" ","type":"text"},{"text":"itself. This means that when using destination and path reducers (see","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers","type":"reference"},{"text":" above) you cannot construct the cases of the state","type":"text"},{"text":" ","type":"text"},{"text":"enum inside ","type":"text"},{"code":"#Preview","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["#Preview {","  FeatureView(","    store: Store(","      initialState: Feature.State(","        destination: .edit(EditFeature.State())  \/\/ 🛑","      )","    ) {","      Feature()","    }","  )","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":".edit"},{"type":"text","text":" case is not usable from within "},{"type":"codeVoice","code":"#Preview"},{"type":"text","text":" since it is generated by the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true},{"type":"text","text":" "},{"type":"text","text":"macro."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The workaround is to move the view to a helper that be compiled outside of a macro, and then use it"},{"type":"text","text":" "},{"type":"text","text":"inside the macro:"}],"type":"paragraph"},{"code":["#Preview {","  preview","}","private var preview: some View {","  FeatureView(","    store: Store(","      initialState: Feature.State(","        destination: .edit(EditFeature.State())","      )","    ) {","      Feature()","    }","  )","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can use a computed property, free function, or even a dedicated view if you want. You can also"},{"type":"text","text":" "},{"type":"text","text":"use the old, non-macro style of previews by using a "},{"type":"codeVoice","code":"PreviewProvider"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["struct Feature_Previews: PreviewProvider {","  static var previews: some  View {","    FeatureView(","      store: Store(","        initialState: Feature.State(","          destination: .edit(EditFeature.State())","        )","      ) {","        Feature()","      }","    )","  }","}"],"syntax":"swift","type":"codeListing"},{"text":"Error: External macro implementation … could not be found","anchor":"Error-External-macro-implementation--could-not-be-found","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"When integrating with the Composable Architecture, one may encounter the following error:"}],"type":"paragraph"},{"style":"note","name":"Error","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"External macro implementation type ‘ComposableArchitectureMacros.ReducerMacro’ could not be"},{"type":"text","text":" "},{"type":"text","text":"found for macro ‘Reducer()’"}]}],"type":"aside"},{"inlineContent":[{"text":"This error can show up when the macro has not yet been enabled, which is a separate error that","type":"text"},{"text":" ","type":"text"},{"text":"should be visible from Xcode’s Issue navigator.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Sometimes, however, this error will still emit due to an Xcode bug in which a custom build"},{"type":"text","text":" "},{"type":"text","text":"configuration name is being used in the project. In general, using a build configuration other than"},{"type":"text","text":" "},{"type":"text","text":"“Debug” or “Release” can trigger upstream build issues with Swift packages, and we recommend only"},{"type":"text","text":" "},{"type":"text","text":"using the default “Debug” and “Release” build configuration names to avoid the above issue and"},{"type":"text","text":" "},{"type":"text","text":"others."}],"type":"paragraph"},{"text":"CI build failures","anchor":"CI-build-failures","level":4,"type":"heading"},{"inlineContent":[{"text":"When testing your code on an external CI server you may run into errors such as the following:","type":"text"}],"type":"paragraph"},{"style":"note","name":"Error","content":[{"type":"paragraph","inlineContent":[{"text":"CasePathsMacros Target ‘CasePathsMacros’ must be enabled before it can be used.","type":"text"}]},{"inlineContent":[{"type":"text","text":"ComposableArchitectureMacros Target ‘ComposableArchitectureMacros’ must be enabled before it can"},{"type":"text","text":" "},{"type":"text","text":"be used."}],"type":"paragraph"}],"type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can fix this in one of two ways. You can write a default to the CI machine that allows Xcode to"},{"type":"text","text":" "},{"type":"text","text":"skip macro validation:"}]},{"type":"codeListing","syntax":"shell","code":["defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES"]},{"type":"paragraph","inlineContent":[{"text":"Or if you are invoking ","type":"text"},{"type":"codeVoice","code":"xcodebuild"},{"text":" directly in your CI scripts, you can pass the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-skipMacroValidation"},{"text":" flag to ","type":"text"},{"type":"codeVoice","code":"xcodebuild"},{"text":" when building your project:","type":"text"}]},{"type":"codeListing","syntax":"shell","code":["xcodebuild -skipMacroValidation …"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"Places a value in the reducer’s dependencies.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","title":"dependency(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","title":"Store","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d":{"abstract":[{"text":"Embeds a child reducer in a parent domain that works on a case of parent enum state.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifCaseLet(_:action:then:fileID:filePath:line:column:)-7sg8d","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifCaseLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"_IfCaseLetReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"ifCaseLet(_:action:then:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/ifcaselet(_:action:then:fileid:filepath:line:column:)-7sg8d"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Scope":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Scope","abstract":[{"text":"Embeds a child reducer in a parent domain.","type":"text"}],"url":"\/documentation\/composablearchitecture\/scope","title":"Scope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"#Destination-and-path-reducers":{"title":"Destination and path reducers","titleInlineContent":[{"text":"Destination and path reducers","type":"text"}],"url":"#Destination-and-path-reducers","type":"link","identifier":"#Destination-and-path-reducers"},"#Using-the-Reducer-macro":{"title":"Using the @Reducer macro","titleInlineContent":[{"text":"Using the @Reducer macro","type":"text"}],"url":"#Using-the-Reducer-macro","type":"link","identifier":"#Using-the-Reducer-macro"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI/NavigationStack/init(path:root:destination:fileID:filePath:line:column:)":{"url":"\/documentation\/composablearchitecture\/swiftui\/navigationstack\/init(path:root:destination:fileid:filepath:line:column:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">>>, ","kind":"text"},{"text":"root","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Drives a navigation stack with a store.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI\/NavigationStack\/init(path:root:destination:fileID:filePath:line:column:)","type":"topic","title":"init(path:root:destination:fileID:filePath:line:column:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"#Nested-enum-reducers":{"title":"Nested enum reducers","titleInlineContent":[{"text":"Nested enum reducers","type":"text"}],"url":"#Nested-enum-reducers","type":"link","identifier":"#Nested-enum-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"url":"\/documentation\/composablearchitecture\/casereducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseReducer","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"CaseReducer","kind":"identifier"}],"title":"CaseReducer","role":"symbol","abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerOf":{"abstract":[{"text":"A convenience for constraining a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"text":" conformance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerOf","navigatorTitle":[{"text":"ReducerOf","kind":"identifier"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerOf","kind":"identifier"}],"type":"topic","title":"ReducerOf","url":"\/documentation\/composablearchitecture\/reducerof"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/onChange(of:_:)":{"title":"onChange(of:_:)","abstract":[{"text":"Adds a reducer to run when this reducer changes the given value in state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/onchange(of:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/onChange(of:_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":") -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_OnChangeReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"role":"symbol","title":"ObservableState()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/signpost(_:log:)":{"title":"signpost(_:log:)","abstract":[{"text":"Instruments a reducer with","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/signpost(_:log:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/signpost(_:log:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signpost","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"log","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"OSLog","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerDeprecations":{"title":"Deprecations","abstract":[{"text":"Review unsupported reducer APIs and their replacements.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducerdeprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerDeprecations","role":"collectionGroup","type":"topic","kind":"article"},"#Preview-and-enum-reducers":{"title":"#Preview and enum reducers","titleInlineContent":[{"text":"#Preview and enum reducers","type":"text"}],"url":"#Preview-and-enum-reducers","type":"link","identifier":"#Preview-and-enum-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reduce":{"role":"symbol","navigatorTitle":[{"text":"Reduce","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reduce","title":"Reduce","kind":"symbol","url":"\/documentation\/composablearchitecture\/reduce","abstract":[{"text":"A type-erased reducer that invokes the given ","type":"text"},{"type":"codeVoice","code":"reduce"},{"text":" function.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reduce","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/_SynthesizedConformance":{"title":"_SynthesizedConformance","abstract":[{"text":"A description of a protocol conformance to synthesize on the State and Action types generated by","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","isActive":true,"type":"reference"},{"text":" macro.","type":"text"}],"url":"\/documentation\/composablearchitecture\/_synthesizedconformance","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/_SynthesizedConformance","role":"symbol","type":"topic","navigatorTitle":[{"text":"_SynthesizedConformance","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_SynthesizedConformance","kind":"identifier"}],"kind":"symbol","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">\n"}],"abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q","title":"ifLet(_:action:destination:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"text":" ","type":"text"},{"text":"Architecture.","type":"text"}],"kind":"article","url":"\/documentation\/composablearchitecture\/testingtca","title":"Testing","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombineReducers"}],"url":"\/documentation\/composablearchitecture\/combinereducers","title":"CombineReducers","navigatorTitle":[{"kind":"identifier","text":"CombineReducers"}],"abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"title":"BindingReducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingreducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","type":"topic","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","url":"\/documentation\/composablearchitecture\/stackbasednavigation","title":"Stack-based navigation","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/case":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"CaseReducerState"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" is "},{"type":"codeVoice","code":"State.StateReducer.Action"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"A destructurable view of a store on a collection of cases."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture16CaseReducerStateP0eD0Qa","text":"StateReducer","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture11CaseReducerP0C5ScopeQa","text":"CaseScope","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/case","url":"\/documentation\/composablearchitecture\/store\/case","title":"case","type":"topic","role":"symbol"},"https://github.com/apple/swift/issues/69477":{"title":"issue","titleInlineContent":[{"text":"issue","type":"text"}],"url":"https:\/\/github.com\/apple\/swift\/issues\/69477","type":"link","identifier":"https:\/\/github.com\/apple\/swift\/issues\/69477"},"#CasePathable-and-dynamicMemberLookup-enums":{"title":"@CasePathable and @dynamicMemberLookup enums","titleInlineContent":[{"text":"@CasePathable and @dynamicMemberLookup enums","type":"text"}],"url":"#CasePathable-and-dynamicMemberLookup-enums","type":"link","identifier":"#CasePathable-and-dynamicMemberLookup-enums"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"title":"Optional","kind":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/swift\/optional","type":"topic","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Reducer"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:fileID:filePath:line:column:)-9blhe":{"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:fileID:filePath:line:column:)-9blhe","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths03AnyA4PathV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"text":"PresentationAction","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">\n","kind":"text"}],"abstract":[],"url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:fileid:filepath:line:column:)-9blhe","type":"topic","role":"symbol","kind":"symbol","title":"ifLet(_:action:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","title":"Reducer()","url":"\/documentation\/composablearchitecture\/reducer()","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol for a type."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"url":"\/documentation\/composablearchitecture\/dependencymanagement","kind":"article","role":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","title":"Dependencies"},"https://swiftpackageindex.com/pointfreeco/swift-case-paths/main/documentation/casepaths/casepathable()":{"title":"@CasePathable","titleInlineContent":[{"code":"@CasePathable","type":"codeVoice"}],"url":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()","type":"link","identifier":"https:\/\/swiftpackageindex.com\/pointfreeco\/swift-case-paths\/main\/documentation\/casepaths\/casepathable()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:element:fileID:filePath:line:column:)-6zye8":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ID","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:element:fileid:filepath:line:column:)-6zye8","title":"forEach(_:action:element:fileID:filePath:line:column:)","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a collection in parent"},{"type":"text","text":" "},{"type":"text","text":"state."}]},"#Autocomplete":{"title":"Autocomplete","titleInlineContent":[{"text":"Autocomplete","type":"text"}],"url":"#Autocomplete","type":"link","identifier":"#Autocomplete"},"#Navigating-to-non-reducer-features":{"title":"Navigating to non-reducer features","titleInlineContent":[{"text":"Navigating to non-reducer features","type":"text"}],"url":"#Navigating-to-non-reducer-features","type":"link","identifier":"#Navigating-to-non-reducer-features"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"text":" of the reducer to change","type":"text"},{"text":" ","type":"text"},{"text":"and\/or kick off a side ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":" that can communicate with the outside world.","type":"text"}],"title":"Action","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","required":true,"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer#Destination-and-path-reducers":{"title":"Destination and path reducers","abstract":[],"url":"\/documentation\/composablearchitecture\/reducer#Destination-and-path-reducers","kind":"section","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer#Destination-and-path-reducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/withState(_:)":{"abstract":[{"type":"text","text":"Calls the given closure with a snapshot of the current state of the store."}],"url":"\/documentation\/composablearchitecture\/store\/withstate(_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/withState(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"}],"type":"topic","title":"withState(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:)":{"role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:)","abstract":[{"type":"text","text":"A special overload of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","isActive":true},{"type":"text","text":" for enum"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"type":"topic","title":"forEach(_:action:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10StackStateV","text":"StackState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11StackActionO","text":"StackAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action"},{"kind":"text","text":">\n"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/none":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect\/none","type":"topic","abstract":[{"text":"An effect that does nothing and completes immediately. Useful for situations where you must","type":"text"},{"text":" ","type":"text"},{"text":"return an effect, but you don’t need to do anything.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/none","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"none","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"none"},"#Synthesizing-protocol-conformances-on-State-and-Action":{"title":"Synthesizing protocol conformances on State and Action","titleInlineContent":[{"text":"Synthesizing protocol conformances on State and Action","type":"text"}],"url":"#Synthesizing-protocol-conformances-on-State-and-Action","type":"link","identifier":"#Synthesizing-protocol-conformances-on-State-and-Action"},"#CI-build-failures":{"title":"CI build failures","titleInlineContent":[{"type":"text","text":"CI build failures"}],"url":"#CI-build-failures","type":"link","identifier":"#CI-build-failures"},"#Conforming-to-the-Reducer-protocol":{"title":"Conforming to the Reducer protocol","titleInlineContent":[{"text":"Conforming to the Reducer protocol","type":"text"}],"url":"#Conforming-to-the-Reducer-protocol","type":"link","identifier":"#Conforming-to-the-Reducer-protocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"kind":"symbol","abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"text":" ","type":"text"},{"text":"other, and merging their effects.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","title":"ReducerBuilder","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"ReducerBuilder","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Body","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa"}],"defaultImplementations":2,"required":true,"title":"body","type":"topic","role":"symbol"},"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"title":"signposts","titleInlineContent":[{"type":"text","text":"signposts"}],"url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"text":" ","type":"text"},{"text":"into the rest of the reducer besides state.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducercaseignored()","type":"topic","role":"symbol","kind":"symbol","title":"ReducerCaseIgnored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"type":"topic","url":"\/documentation\/composablearchitecture\/emptyreducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"}],"kind":"symbol","title":"EmptyReducer","abstract":[{"type":"text","text":"A reducer that does nothing."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","role":"collectionGroup","type":"topic","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"kind":"article","url":"\/documentation\/composablearchitecture\/navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"url":"\/documentation\/composablearchitecture\/treebasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","kind":"article","type":"topic","title":"Tree-based navigation","role":"article","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}]},"#Automatic-fulfillment-of-reducer-requirements":{"title":"Automatic fulfillment of reducer requirements","titleInlineContent":[{"type":"text","text":"Automatic fulfillment of reducer requirements"}],"url":"#Automatic-fulfillment-of-reducer-requirements","type":"link","identifier":"#Automatic-fulfillment-of-reducer-requirements"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/transformDependency(_:transform:)":{"abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}],"url":"\/documentation\/composablearchitecture\/reducer\/transformdependency(_:transform:)","title":"transformDependency(_:transform:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/transformDependency(_:transform:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"required":true,"role":"symbol","title":"State","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"abstract":[{"type":"text","text":"Marks the case of an enum reducer as holding onto “ephemeral” state."}],"url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","title":"ReducerCaseEphemeral()","type":"topic","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseEphemeral","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","type":"topic","role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"},"#Gotchas":{"title":"Gotchas","titleInlineContent":[{"text":"Gotchas","type":"text"}],"url":"#Gotchas","type":"link","identifier":"#Gotchas"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb":{"title":"forEach(_:action:destination:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/foreach(_:action:destination:fileid:filepath:line:column:)-9svqb","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Destination"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackState","preciseIdentifier":"s:22ComposableArchitecture10StackStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StackAction","preciseIdentifier":"s:22ComposableArchitecture11StackActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"destination"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Destination"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"kind":"text","text":">\n"}],"abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on elements of a navigation stack in"},{"type":"text","text":" "},{"text":"parent state.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:_:)":{"abstract":[{"type":"text","text":"Sets the dependency value of the specified key path to the given value."}],"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:_:)","title":"dependency(_:_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:then:fileID:filePath:line:column:)-2r2pn","role":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:then:fileid:filepath:line:column:)-2r2pn","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"WrappedState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedState","kind":"typeIdentifier"},{"text":"?>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"WrappedAction","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"title":"ifLet(_:action:then:fileID:filePath:line:column:)","abstract":[{"text":"Embeds a child reducer in a parent domain that works on an optional property of parent state.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/_printChanges(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_printChanges","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_ReducerPrinter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">?) -> ","kind":"text"},{"text":"_PrintChangesReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Enhances a reducer with debug logging of received actions and state mutations for the given","type":"text"},{"text":" ","type":"text"},{"text":"printer.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/_printchanges(_:)","title":"_printChanges(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/_printChanges(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:)":{"title":"ifLet(_:action:)","kind":"symbol","abstract":[{"type":"text","text":"A special overload of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","isActive":true},{"type":"text","text":" for enum"},{"type":"text","text":" "},{"type":"text","text":"reducers."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildAction","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":">\n","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:)"},"http://github.com/pointfreeco/swift-case-paths":{"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-case-paths","identifier":"http:\/\/github.com\/pointfreeco\/swift-case-paths","title":"Case paths","titleInlineContent":[{"type":"text","text":"Case paths"}]}}}