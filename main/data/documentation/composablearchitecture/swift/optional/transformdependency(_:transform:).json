{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","kind":"typeIdentifier","text":"DependencyValues"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"keyPath","content":[{"inlineContent":[{"type":"text","text":"A key path that indicates the property of the "},{"type":"codeVoice","code":"DependencyValues"},{"type":"text","text":" structure to"},{"type":"text","text":" "},{"type":"text","text":"transform."}],"type":"paragraph"}]},{"name":"transform","content":[{"inlineContent":[{"text":"A closure that is handed a mutable instance of the value specified by the key","type":"text"},{"text":" ","type":"text"},{"text":"path.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is similar to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/dependency(_:_:)"},{"type":"text","text":", except it allows you to mutate a dependency value"},{"type":"text","text":" "},{"type":"text","text":"directly. This can be handy when you want to alter a dependency but still use its current"},{"type":"text","text":" "},{"type":"text","text":"value."}]},{"type":"paragraph","inlineContent":[{"text":"For example, suppose you want to see when a particular endpoint of a dependency gets called","type":"text"},{"text":" ","type":"text"},{"text":"in your application. You can override that endpoint to insert a breakpoint or print statement,","type":"text"},{"text":" ","type":"text"},{"text":"but still call out to the original endpoint:","type":"text"}]},{"type":"codeListing","code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You can also transform ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" dependency values at once by using the ","type":"text"},{"code":"\\.self","type":"codeVoice"},{"text":" key path:","type":"text"}]},{"type":"codeListing","code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"],"syntax":"swift"},{"type":"aside","name":"Warning","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The trailing closure of "},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/transformDependency(_:transform:)","type":"reference"},{"type":"text","text":" is called for every"},{"type":"text","text":" "},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"type":"text","text":" "},{"type":"text","text":"application’s lifecycle. This means you should typically not create dependencies in the"},{"type":"text","text":" "},{"type":"text","text":"closure as that will cause a new dependency to be created everytime an action is sent."}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/transformDependency(_:transform:)"},"metadata":{"title":"transformDependency(_:transform:)","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:Sq","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"ComposableArchitecture"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/swift\/optional\/transformdependency(_:transform:)"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations"]]},"abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/Reducer-Implementations":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/Reducer-Implementations","url":"\/documentation\/composablearchitecture\/swift\/optional\/reducer-implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Reducer Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/transformDependency(_:transform:)":{"kind":"symbol","title":"transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/swift\/optional\/transformdependency(_:transform:)","type":"topic","abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/transformDependency(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","url":"\/documentation\/composablearchitecture\/swift\/optional","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"identifier"}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}],"role":"symbol","type":"topic","title":"Optional"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional/dependency(_:_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional\/dependency(_:_:)","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"DependencyValues","kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/swift\/optional\/dependency(_:_:)","title":"dependency(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"}}}