{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"preciseIdentifier":"s:22ComposableArchitecture17ViewActionSendingP","kind":"typeIdentifier","text":"ViewActionSending","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"},{"kind":"text","text":") "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier","text":"Reducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:22ComposableArchitecture10ViewActionP","kind":"typeIdentifier","text":"ViewAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If you want to restrict what actions can be sent from the view you can use this macro along with the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":" protocol. You start by conforming your reducer’s "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum to the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":" protocol, and moving view-specific actions to its own inner enum:"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct Feature {","  struct State { \/* ... *\/ }","  enum Action: ViewAction {","    case loginResponse(Bool)","    case view(View)","","    enum View {","      case loginButtonTapped","    }","  }","  \/\/ ...","}"],"type":"codeListing"},{"inlineContent":[{"text":"Then you can apply the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)"},{"text":" macro to your view by specifying the type of the","type":"text"},{"text":" ","type":"text"},{"text":"reducer that powers the view:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@ViewAction(for: Feature.self)","struct FeatureView: View {","  let store: StoreOf<Feature>","  \/\/ ...","}"],"type":"codeListing"},{"inlineContent":[{"text":"The macro does two things:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It adds a ","type":"text"},{"code":"send","type":"codeVoice"},{"text":" method to the view that you can use instead of ","type":"text"},{"code":"store.send","type":"codeVoice"},{"text":". This allows you","type":"text"},{"text":" ","type":"text"},{"text":"to send view actions more simply, without wrapping the action in ","type":"text"},{"code":".view(…)","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"diff","type":"codeListing","code":[" Button(\"Login\") {","-  store.send(.view(.loginButtonTapped))","+  send(.loginButtonTapped)"," }"]}]},{"content":[{"inlineContent":[{"text":"It creates warning diagnostics if you try sending actions through ","type":"text"},{"code":"store.send","type":"codeVoice"},{"text":" rather than","type":"text"},{"text":" ","type":"text"},{"text":"using the ","type":"text"},{"code":"send","type":"codeVoice"},{"text":" method on the view:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Button(\"Login\") {","  store.send(.view(.loginButtonTapped))","\/\/┬─────────","\/\/╰─ ⚠️ Do not use 'store.send' directly when using '@ViewAction'","}"]}]}],"type":"unorderedList"}]}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"],"generated":true,"title":"View actions","anchor":"View-actions"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"]]},"abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":"s."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/viewaction(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"title":"ViewAction(for:)","role":"symbol","symbolKind":"macro","roleHeading":"Macro","externalID":"s:22ComposableArchitecture10ViewAction3foryxm_tcAA7ReducerRzAaB0D0Rpzlufm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction":{"kind":"symbol","title":"ViewAction","url":"\/documentation\/composablearchitecture\/viewaction","navigatorTitle":[{"kind":"identifier","text":"ViewAction"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","abstract":[{"text":"Defines the actions that can be sent from a view.","type":"text"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction(for:)":{"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/viewaction(for:)","abstract":[{"type":"text","text":"Provides a view with access to a feature’s "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":"s."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"title":"ViewAction(for:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"required":true,"role":"symbol","title":"State","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[{"type":"text","text":"A type that holds the current state of the reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewActionSending":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","url":"\/documentation\/composablearchitecture\/viewactionsending","role":"symbol","abstract":[{"text":"A type that represents a view with a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"text":" that can send ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","type":"reference","isActive":true},{"text":"s.","type":"text"}],"kind":"symbol","title":"ViewActionSending","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewActionSending","kind":"identifier"}],"navigatorTitle":[{"text":"ViewActionSending","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"text":" of the reducer to change","type":"text"},{"text":" ","type":"text"},{"text":"and\/or kick off a side ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":" that can communicate with the outside world.","type":"text"}],"title":"Action","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer\/action","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","required":true,"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"kind":"symbol","title":"Store","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]}}}