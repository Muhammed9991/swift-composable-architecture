{"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingReducer"}],"navigatorTitle":[{"kind":"identifier","text":"BindingReducer"}],"roleHeading":"Structure","symbolKind":"struct","role":"symbol","externalID":"s:22ComposableArchitecture14BindingReducerV","modules":[{"name":"ComposableArchitecture"}],"title":"BindingReducer"},"seeAlsoSections":[{"title":"Supporting reducers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional"],"anchor":"Supporting-reducers"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],"type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingreducer"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg"],"anchor":"Initializers"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)"],"anchor":"Instance-Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"],"anchor":"Default-Implementations"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","text":"State","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","text":"BindableAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This reducer should typically be composed into the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","isActive":true},{"type":"text","text":" of your"},{"type":"text","text":" "},{"type":"text","text":"feature’s reducer:"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct Feature {","  struct State {","    @BindingState var isOn = false","    \/\/ More properties...","  }","  enum Action: BindableAction {","    case binding(BindingAction<State>)","    \/\/ More actions","  }","","  var body: some ReducerOf<Self> {","    BindingReducer()","    Reduce { state, action in","      \/\/ Your feature's logic...","    }","  }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This makes it so that the binding’s logic is run before the feature’s logic, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"i.e."}]},{"type":"text","text":" you will"},{"type":"text","text":" "},{"type":"text","text":"only see the state after the binding was written. If you want to react to the state "},{"type":"emphasis","inlineContent":[{"text":"before","type":"text"}]},{"type":"text","text":" the"},{"type":"text","text":" "},{"type":"text","text":"binding was written, you can flip the order of the composition:"}],"type":"paragraph"},{"syntax":"swift","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    \/\/ Your feature's logic...","  }","  BindingReducer()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you forget to compose the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","isActive":true,"type":"reference"},{"type":"text","text":" into your feature’s reducer, then when a binding"},{"type":"text","text":" "},{"type":"text","text":"is written to it will cause a runtime purple Xcode warning letting you know what needs to be"},{"type":"text","text":" "},{"type":"text","text":"fixed."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"kind":"symbol","title":"BindingAction","abstract":[{"type":"text","text":"An action that describes simple mutations to some root state at a writable key path."}],"url":"\/documentation\/composablearchitecture\/bindingaction","type":"topic","role":"symbol","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/reduce(into:action:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/bindingreducer\/reduce(into:action:)","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/reduce(into:action:)","title":"reduce(into:action:)","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"title":"BindingReducer","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/bindingreducer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","type":"topic","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-8fpg":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-8fpg","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-8fpg","title":"init(action:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Swift/Optional":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Swift\/Optional","url":"\/documentation\/composablearchitecture\/swift\/optional","kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"identifier"}],"navigatorTitle":[{"text":"Optional","kind":"identifier"}],"role":"symbol","type":"topic","title":"Optional"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init(action:)-33ljj":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"url":"\/documentation\/composablearchitecture\/bindingreducer\/init(action:)-33ljj","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init(action:)-33ljj","title":"init(action:)","kind":"symbol","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/EmptyReducer":{"navigatorTitle":[{"kind":"identifier","text":"EmptyReducer"}],"type":"topic","url":"\/documentation\/composablearchitecture\/emptyreducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/EmptyReducer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyReducer"}],"kind":"symbol","title":"EmptyReducer","abstract":[{"type":"text","text":"A reducer that does nothing."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","type":"topic","abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction\/state","required":true,"role":"symbol","title":"State","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"title":"Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations","role":"collectionGroup","title":"Reducer Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindableAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","url":"\/documentation\/composablearchitecture\/bindableaction","abstract":[{"text":"An action type that exposes a ","type":"text"},{"code":"binding","type":"codeVoice"},{"text":" case that holds a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true,"type":"reference"},{"text":".","type":"text"}],"role":"symbol","title":"BindableAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/body-20w8t":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/body-20w8t","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/body-20w8t","abstract":[{"text":"The content and behavior of a reducer that is composed from other reducers.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Body","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP4BodyQa"}],"defaultImplementations":2,"required":true,"title":"body","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Initializes a reducer that updates bindable state when it receives binding actions.","type":"text"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","kind":"symbol","title":"init()","url":"\/documentation\/composablearchitecture\/bindingreducer\/init()"}}}