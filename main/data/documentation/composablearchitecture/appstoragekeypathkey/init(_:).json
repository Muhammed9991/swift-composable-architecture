{"metadata":{"symbolKind":"init","title":"init(_:)","platforms":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_SendableReferenceWritableKeyPath","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"roleHeading":"Initializer","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture017AppStorageKeyPathE0VyACyxGs8Sendable_s017ReferenceWritableeF0CySo14NSUserDefaultsCxGXccfc"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/init(_:)"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"text":"Use an 'AppStorageKey', instead","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha"},{"text":"<","kind":"text"},{"text":"UserDefaults","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/appstoragekeypathkey\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/init(_:)":{"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/init(_:)","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture33_SendableReferenceWritableKeyPatha","text":"_SendableReferenceWritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"deprecated":true,"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/init(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","role":"symbol","kind":"symbol","title":"AppStorageKeyPathKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"}}}