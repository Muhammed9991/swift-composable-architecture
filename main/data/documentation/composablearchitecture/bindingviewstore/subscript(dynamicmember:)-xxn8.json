{"metadata":{"role":"symbol","title":"subscript(dynamicMember:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"text":"BindingViewState","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"subscript","roleHeading":"Instance Subscript","externalID":"s:22ComposableArchitecture16BindingViewStoreV13dynamicMemberAA0cD5StateVyqd__Gs15WritableKeyPathCyxAA0cH0Vyqd__GG_tcSQRd__luip"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstore\/subscript(dynamicmember:)-xxn8"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"BindingState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"text":"BindingViewState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore\/subscript(dynamicMember:)-xxn8"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"deprecated":true,"title":"ViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","url":"\/documentation\/composablearchitecture\/viewstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore/subscript(dynamicMember:)-xxn8":{"url":"\/documentation\/composablearchitecture\/bindingviewstore\/subscript(dynamicmember:)-xxn8","role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore\/subscript(dynamicMember:)-xxn8","kind":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">>) -> "},{"kind":"typeIdentifier","text":"BindingViewState","preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"subscript(dynamicMember:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"url":"\/documentation\/composablearchitecture\/bindingviewstate","type":"topic","title":"BindingViewState","navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstore","title":"BindingViewStore","abstract":[{"text":"A property wrapper type that can derive ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"text":" values for a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"BindingViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"title":"BindingState","role":"symbol","deprecated":true,"kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingstate","abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","navigatorTitle":[{"text":"BindingState","kind":"identifier"}]}}}