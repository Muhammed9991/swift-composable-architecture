{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.chartYAxisLabel(position:alignment:spacing:content:)"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYAxisLabel(position:alignment:spacing:content:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","externalID":"s:7SwiftUI4ViewP6ChartsE15chartYAxisLabel8position9alignment7spacing7contentQrAD18AnnotationPositionV_AA9AlignmentVSg14CoreFoundation7CGFloatVSgqd__yXEtAaBRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","extendedModule":"SwiftUICore","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"name":"iOS","unavailable":false,"beta":false,"introducedAt":"16.0","deprecated":false},{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false},{"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0","deprecated":false},{"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"9.0","deprecated":false}],"title":"chartYAxisLabel(position:alignment:spacing:content:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartYAxisLabel","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AnnotationPosition","kind":"typeIdentifier","preciseIdentifier":"s:6Charts18AnnotationPositionV"},{"text":", ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Alignment","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AlignmentV"},{"text":"?, ","kind":"text"},{"text":"spacing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","kind":"typeIdentifier","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"text":"?, ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartyaxislabel(position:alignment:spacing:content:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartYAxisLabel"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Charts18AnnotationPositionV","kind":"typeIdentifier","text":"AnnotationPosition"},{"kind":"text","text":" = .automatic, "},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","kind":"typeIdentifier","text":"Alignment"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"spacing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"kind":"text","text":"? = nil, "},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"title":"SwiftUI Integration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartYAxisLabel(position:alignment:spacing:content:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/chartyaxislabel(position:alignment:spacing:content:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartYAxisLabel"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Charts18AnnotationPositionV","kind":"typeIdentifier","text":"AnnotationPosition"},{"kind":"text","text":", "},{"kind":"externalParam","text":"alignment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9AlignmentV","kind":"typeIdentifier","text":"Alignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"spacing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier","text":"CGFloat"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"title":"chartYAxisLabel(position:alignment:spacing:content:)","abstract":[],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartYAxisLabel(position:alignment:spacing:content:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","title":"View Implementations","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/ifletstore","title":"IfLetStore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"kind":"symbol"}}}