{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be handy when a feature needs to start a long-living effect when the feature appears,"},{"type":"text","text":" "},{"type":"text","text":"but cancellation of that effect is handled by the parent when the feature disappears. Such a"},{"type":"text","text":" "},{"type":"text","text":"feature is difficult to exhaustively test in isolation because there is no action in its"},{"type":"text","text":" "},{"type":"text","text":"domain that cancels the effect:"}]},{"type":"codeListing","syntax":"swift","code":["let store = TestStore(\/* ... *\/)","","let onAppearTask = await store.send(.onAppear)","\/\/ Assert what is happening in the feature","","await onAppearTask.cancel() \/\/ âœ… Cancel the task to simulate the feature disappearing."]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/teststoretask\/cancel()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask"]]},"abstract":[{"text":"Cancels the underlying task and waits for it to finish.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","symbolKind":"method","title":"cancel()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture13TestStoreTaskV6cancelyyYaF"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask/cancel()":{"abstract":[{"type":"text","text":"Cancels the underlying task and waits for it to finish."}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/teststoretask\/cancel()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"title":"cancel()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask\/cancel()","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStore","kind":"identifier"}],"type":"topic","title":"TestStore","navigatorTitle":[{"text":"TestStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStoreTask":{"type":"topic","title":"TestStoreTask","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStoreTask","abstract":[{"text":"The type returned from ","type":"text"},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8f2pl","type":"codeVoice"},{"text":" that represents the","type":"text"},{"text":" ","type":"text"},{"text":"lifecycle of the effect started from sending an action.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"TestStoreTask","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestStoreTask","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststoretask"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection","abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"}}}